{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bivin\\\\Favorites\\\\Desktop\\\\sem7\\\\fsd\\\\ocr-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [text, setText] = useState('');\n  const [status, setStatus] = useState('Idle');\n  const [recipes, setRecipes] = useState([]);\n  const [selectedRecipe, setSelectedRecipe] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [activePage, setActivePage] = useState('home');\n  const [imageLoading, setImageLoading] = useState({});\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n  const handleImageChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setImage(e.target.files[0]);\n      setText('');\n      setRecipes([]);\n      setSelectedRecipe(null);\n      setErrorMessage('');\n      setStatus('Image selected');\n      setImageLoading({});\n    }\n  };\n  const processImage = async () => {\n    setErrorMessage('');\n    if (!image) {\n      setErrorMessage('Please select an image first.');\n      return;\n    }\n    setStatus('Uploading and processing...');\n    try {\n      var _ocrData$cleaned;\n      const formData = new FormData();\n      formData.append('image', image);\n      const ocrResponse = await fetch(`${API_URL}/ocr`, {\n        method: 'POST',\n        body: formData\n      });\n      const ocrData = await ocrResponse.json();\n      const extractedText = ocrData.text || ((_ocrData$cleaned = ocrData.cleaned) === null || _ocrData$cleaned === void 0 ? void 0 : _ocrData$cleaned.join('\\n')) || '';\n      if (!extractedText) {\n        setStatus('No text extracted from the image.');\n        return;\n      }\n      setText(extractedText);\n      const ingredients = extractedText.toLowerCase().split(/\\s*[\\r\\n-]\\s*/).map(item => item.replace(/^\\d+(\\.\\d+)?\\s*(cups?|tbsp|tsp|oz|g|kg|lb)?\\s*/i, '')).map(item => item.replace(/\\b(and|or|with|to|taste)\\b/g, '')).filter(item => item.trim() !== '' && item.length > 2);\n      const recipesResponse = await fetch(`${API_URL}/get_recipes`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ingredients\n        })\n      });\n      const recipesData = await recipesResponse.json();\n      setRecipes(recipesData.recipes || []);\n      setStatus('Complete!');\n    } catch (error) {\n      setErrorMessage(error.message);\n      setStatus('Error occurred.');\n    }\n  };\n  const renderPageContent = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-4 ${isDarkMode ? 'bg-gray-900 text-white' : 'bg-gray-100 text-gray-900'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Diet Recommender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageChange,\n        className: \"mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: processImage,\n        className: \"bg-blue-500 text-white px-4 py-2 rounded mb-4\",\n        children: \"Process Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 28\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: [\"Error: \", errorMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 34\n      }, this), text && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-semibold\",\n          children: \"Extracted Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), recipes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-semibold\",\n          children: \"Recipes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: recipe.title\n          }, recipe.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  };\n  const toggleDarkMode = () => setIsDarkMode(prev => !prev);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleDarkMode,\n      className: `fixed bottom-4 right-4 p-2 rounded-full ${isDarkMode ? 'bg-gray-700' : 'bg-gray-300'}`,\n      children: isDarkMode ? 'ðŸŒž Light Mode' : 'ðŸŒ™ Dark Mode'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), renderPageContent()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"xgRTCqFZkxj5O1d16rxZnmuHOj8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","image","setImage","text","setText","status","setStatus","recipes","setRecipes","selectedRecipe","setSelectedRecipe","errorMessage","setErrorMessage","isDarkMode","setIsDarkMode","activePage","setActivePage","imageLoading","setImageLoading","API_URL","process","env","REACT_APP_API_URL","handleImageChange","e","target","files","processImage","_ocrData$cleaned","formData","FormData","append","ocrResponse","fetch","method","body","ocrData","json","extractedText","cleaned","join","ingredients","toLowerCase","split","map","item","replace","filter","trim","length","recipesResponse","headers","JSON","stringify","recipesData","error","message","renderPageContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","recipe","title","id","toggleDarkMode","prev","_c","$RefreshReg$"],"sources":["C:/Users/bivin/Favorites/Desktop/sem7/fsd/ocr-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst App = () => {\r\n    const [image, setImage] = useState(null);\r\n    const [text, setText] = useState('');\r\n    const [status, setStatus] = useState('Idle');\r\n    const [recipes, setRecipes] = useState([]);\r\n    const [selectedRecipe, setSelectedRecipe] = useState(null);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [isDarkMode, setIsDarkMode] = useState(true);\r\n    const [activePage, setActivePage] = useState('home');\r\n    const [imageLoading, setImageLoading] = useState({});\r\n\r\n    const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n    const handleImageChange = (e) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            setImage(e.target.files[0]);\r\n            setText('');\r\n            setRecipes([]);\r\n            setSelectedRecipe(null);\r\n            setErrorMessage('');\r\n            setStatus('Image selected');\r\n            setImageLoading({});\r\n        }\r\n    };\r\n\r\n    const processImage = async () => {\r\n        setErrorMessage('');\r\n        if (!image) {\r\n            setErrorMessage('Please select an image first.');\r\n            return;\r\n        }\r\n\r\n        setStatus('Uploading and processing...');\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('image', image);\r\n\r\n            const ocrResponse = await fetch(`${API_URL}/ocr`, { method: 'POST', body: formData });\r\n            const ocrData = await ocrResponse.json();\r\n\r\n            const extractedText = ocrData.text || ocrData.cleaned?.join('\\n') || '';\r\n            if (!extractedText) {\r\n                setStatus('No text extracted from the image.');\r\n                return;\r\n            }\r\n            setText(extractedText);\r\n\r\n            const ingredients = extractedText\r\n                .toLowerCase()\r\n                .split(/\\s*[\\r\\n-]\\s*/)\r\n                .map(item => item.replace(/^\\d+(\\.\\d+)?\\s*(cups?|tbsp|tsp|oz|g|kg|lb)?\\s*/i, ''))\r\n                .map(item => item.replace(/\\b(and|or|with|to|taste)\\b/g, ''))\r\n                .filter(item => item.trim() !== '' && item.length > 2);\r\n\r\n            const recipesResponse = await fetch(`${API_URL}/get_recipes`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ ingredients }),\r\n            });\r\n            const recipesData = await recipesResponse.json();\r\n            setRecipes(recipesData.recipes || []);\r\n            setStatus('Complete!');\r\n        } catch (error) {\r\n            setErrorMessage(error.message);\r\n            setStatus('Error occurred.');\r\n        }\r\n    };\r\n\r\n    const renderPageContent = () => {\r\n        return (\r\n            <div className={`p-4 ${isDarkMode ? 'bg-gray-900 text-white' : 'bg-gray-100 text-gray-900'}`}>\r\n                <h1 className=\"text-2xl font-bold mb-4\">Diet Recommender</h1>\r\n\r\n                <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} className=\"mb-4\" />\r\n                <button onClick={processImage} className=\"bg-blue-500 text-white px-4 py-2 rounded mb-4\">\r\n                    Process Image\r\n                </button>\r\n\r\n                {status && <p>Status: {status}</p>}\r\n                {errorMessage && <p className=\"text-red-500\">Error: {errorMessage}</p>}\r\n\r\n                {text && (\r\n                    <div className=\"mb-4\">\r\n                        <h2 className=\"font-semibold\">Extracted Text:</h2>\r\n                        <pre>{text}</pre>\r\n                    </div>\r\n                )}\r\n\r\n                {recipes.length > 0 && (\r\n                    <div>\r\n                        <h2 className=\"font-semibold\">Recipes:</h2>\r\n                        <ul>\r\n                            {recipes.map((recipe) => (\r\n                                <li key={recipe.id}>{recipe.title}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const toggleDarkMode = () => setIsDarkMode(prev => !prev);\r\n\r\n    return (\r\n        <div className=\"min-h-screen\">\r\n            <button\r\n                onClick={toggleDarkMode}\r\n                className={`fixed bottom-4 right-4 p-2 rounded-full ${isDarkMode ? 'bg-gray-700' : 'bg-gray-300'}`}\r\n            >\r\n                {isDarkMode ? 'ðŸŒž Light Mode' : 'ðŸŒ™ Dark Mode'}\r\n            </button>\r\n            {renderPageContent()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}