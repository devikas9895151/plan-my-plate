{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bivin\\\\Favorites\\\\Desktop\\\\sem7\\\\fsd\\\\ocr-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Main App component for the diet recommender application.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State variables\n  const [image, setImage] = useState(null);\n  const [text, setText] = useState('');\n  const [status, setStatus] = useState('Idle');\n  const [recipes, setRecipes] = useState([]);\n  const [selectedRecipe, setSelectedRecipe] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [activePage, setActivePage] = useState('home');\n  const [imageLoading, setImageLoading] = useState({});\n  const [userProfile, setUserProfile] = useState({\n    name: 'Paula',\n    email: 'paula@zylker.com',\n    userId: '630083685',\n    dietPlan: 'Your custom diet plan will appear here after a recommendation is generated.',\n    weeklyGoal: 'N/A'\n  });\n\n  // Base API URL from environment variable\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n  // Sync activePage with URL hash\n  useEffect(() => {\n    const hash = window.location.hash.replace('#', '').toLowerCase() || 'home';\n    setActivePage(hash);\n  }, []);\n\n  // Handle navigation click and update URL hash\n  const handleNavClick = page => {\n    const formattedPage = page.toLowerCase().replace(' ', '-');\n    window.location.hash = formattedPage;\n    setActivePage(formattedPage);\n  };\n\n  // Handles the file input change event\n  const handleImageChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      setImage(event.target.files[0]);\n      setText('');\n      setRecipes([]);\n      setSelectedRecipe(null);\n      setErrorMessage('');\n      setStatus('Image selected');\n      setImageLoading({});\n    }\n  };\n\n  // Main function to process the image and find recipes\n  const processImage = async () => {\n    setErrorMessage('');\n    if (!image) {\n      setErrorMessage('Please select an image first.');\n      return;\n    }\n    setStatus('Uploading and processing...');\n    setText('');\n    setRecipes([]);\n    setSelectedRecipe(null);\n    setImageLoading({});\n    try {\n      var _recipesData$recipes;\n      // Step 1: Upload image for OCR\n      const formData = new FormData();\n      formData.append('image', image);\n      const ocrResponse = await fetch(`${API_URL}/ocr`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!ocrResponse.ok) {\n        const errorText = await ocrResponse.text();\n        throw new Error(`OCR failed with status: ${ocrResponse.status}. Server response: ${errorText}`);\n      }\n      const ocrData = await ocrResponse.json();\n      if (ocrData.error) {\n        throw new Error(ocrData.error);\n      }\n      const extractedText = ocrData.text;\n      setText(extractedText || 'No text extracted.');\n\n      // Step 2: Format text into a list of ingredients\n      const ingredients = extractedText.toLowerCase().split(/\\s*[\\r\\n-]\\s*/).map(item => item.replace(/^\\d+(\\.\\d+)?\\s*(cups?|tbsp|tsp|oz|g|kg|lb)?\\s*/i, '')).map(item => item.replace(/\\b(and|or|with|to|taste)\\b\\s*/g, '')).filter(item => item.trim() !== '' && item.length > 2);\n      if (ingredients.length === 0) {\n        setStatus('No valid ingredients found in the image.');\n        return;\n      }\n\n      // Step 3: Send ingredients to get a list of recipes\n      setStatus('Searching local database for recipes...');\n      const recipesResponse = await fetch(`${API_URL}/get_recipes`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ingredients\n        })\n      });\n      if (!recipesResponse.ok) {\n        const errorText = await recipesResponse.text();\n        throw new Error(`Recipe lookup failed with status: ${recipesResponse.status}. Server response: ${errorText || 'No additional details'}`);\n      }\n      const recipesData = await recipesResponse.json();\n      setRecipes(recipesData.recipes || []);\n      setImageLoading(((_recipesData$recipes = recipesData.recipes) === null || _recipesData$recipes === void 0 ? void 0 : _recipesData$recipes.reduce((acc, recipe) => ({\n        ...acc,\n        [recipe.id]: true\n      }), {})) || {});\n      setStatus('Complete!');\n    } catch (error) {\n      setErrorMessage(error.message.includes('Failed to fetch') ? `Cannot connect to the backend server. Please ensure it is running at ${API_URL}.` : `Error: ${error.message}`);\n      setStatus('An error occurred.');\n      setRecipes([]);\n      setImageLoading({});\n    }\n  };\n\n  // Fetch detailed information for a specific recipe\n  const fetchRecipeDetails = async (id, title) => {\n    setStatus('Fetching recipe details...');\n    setErrorMessage('');\n    setImageLoading(prev => ({\n      ...prev,\n      [id]: true\n    }));\n    try {\n      const response = await fetch(`${API_URL}/get_recipe_details/${id}`);\n      if (!response.ok) throw new Error(`Failed to fetch recipe details: ${response.status}`);\n      const details = await response.json();\n      setSelectedRecipe(details);\n      setStatus('Details loaded!');\n    } catch (error) {\n      setErrorMessage('Failed to load details. Please try again.');\n      setStatus('Failed to load details.');\n    } finally {\n      setImageLoading(prev => ({\n        ...prev,\n        [id]: false\n      }));\n    }\n  };\n  const goBackToList = () => {\n    setSelectedRecipe(null);\n    setStatus('Complete!');\n    setImageLoading({});\n  };\n  const toggleDarkMode = () => setIsDarkMode(prev => !prev);\n  const themeClasses = isDarkMode ? {\n    bg: 'bg-gray-900',\n    text: 'text-white',\n    container: 'bg-gray-800 border-gray-700',\n    card: 'bg-gray-700',\n    cardHover: 'hover:bg-gray-600',\n    button: 'bg-gray-700 text-gray-200 hover:bg-gray-600',\n    buttonPrimary: 'bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700',\n    subheading: 'text-purple-300',\n    infoBox: 'bg-gray-700 border-gray-700',\n    input: 'file:text-blue-700 file:bg-blue-50 hover:file:bg-blue-100',\n    nutrients: 'bg-gray-600 text-gray-100',\n    nutrientsSubtext: 'text-gray-400',\n    listText: 'text-gray-300',\n    navText: 'text-gray-300 hover:text-white',\n    navActive: 'border-b-2 border-purple-400'\n  } : {\n    bg: 'bg-gray-100',\n    text: 'text-gray-900',\n    container: 'bg-white border-gray-300',\n    card: 'bg-gray-200',\n    cardHover: 'hover:bg-gray-300',\n    button: 'bg-gray-300 text-gray-800 hover:bg-gray-400',\n    buttonPrimary: 'bg-gradient-to-r from-indigo-500 to-teal-600 hover:from-indigo-600 hover:to-teal-700',\n    subheading: 'text-indigo-500',\n    infoBox: 'bg-gray-200 border-gray-300',\n    input: 'file:text-indigo-700 file:bg-indigo-50 hover:file:bg-indigo-100',\n    nutrients: 'bg-gray-300 text-gray-800',\n    nutrientsSubtext: 'text-gray-600',\n    listText: 'text-gray-700',\n    navText: 'text-gray-600 hover:text-gray-900',\n    navActive: 'border-b-2 border-indigo-500'\n  };\n  const renderPageContent = () => {\n    if (activePage === 'home') {\n      if (selectedRecipe) {\n        var _selectedRecipe$nutri, _selectedRecipe$nutri2, _selectedRecipe$nutri3, _selectedRecipe$nutri4, _selectedRecipe$ingre;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: goBackToList,\n            children: \"\\u2190 Back to Recipes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedRecipe.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedRecipe.image,\n            alt: selectedRecipe.title,\n            onError: e => {\n              e.target.src = `https://placehold.co/400x300/e2e8f0/888?text=${encodeURIComponent(selectedRecipe.title)}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Nutrition (per serving):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Calories: \", ((_selectedRecipe$nutri = selectedRecipe.nutrients) === null || _selectedRecipe$nutri === void 0 ? void 0 : _selectedRecipe$nutri.calories) || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Protein: \", ((_selectedRecipe$nutri2 = selectedRecipe.nutrients) === null || _selectedRecipe$nutri2 === void 0 ? void 0 : _selectedRecipe$nutri2.protein) || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Carbs: \", ((_selectedRecipe$nutri3 = selectedRecipe.nutrients) === null || _selectedRecipe$nutri3 === void 0 ? void 0 : _selectedRecipe$nutri3.carbohydrates) || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Fat: \", ((_selectedRecipe$nutri4 = selectedRecipe.nutrients) === null || _selectedRecipe$nutri4 === void 0 ? void 0 : _selectedRecipe$nutri4.fat) || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Ingredients:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: (_selectedRecipe$ingre = selectedRecipe.ingredients) === null || _selectedRecipe$ingre === void 0 ? void 0 : _selectedRecipe$ingre.map((ing, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: ing\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 78\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Instructions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: selectedRecipe.instructions || 'Instructions not available.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleImageChange,\n          accept: \"image/*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: processImage,\n          disabled: !image || status.includes('...'),\n          children: \"Find Recipes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), text && /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 30\n        }, this), recipes.map(r => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => fetchRecipeDetails(r.id, r.title),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: r.image,\n            alt: r.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: r.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 29\n          }, this)]\n        }, r.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Page not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 16\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${themeClasses.bg} ${themeClasses.text} min-h-screen`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"PlanMyPlate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDarkMode,\n        children: isDarkMode ? '🌞 Light Mode' : '🌙 Dark Mode'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: renderPageContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"9aHH+IWouRBL4I1AvvnwbmDKmJM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","image","setImage","text","setText","status","setStatus","recipes","setRecipes","selectedRecipe","setSelectedRecipe","errorMessage","setErrorMessage","isDarkMode","setIsDarkMode","activePage","setActivePage","imageLoading","setImageLoading","userProfile","setUserProfile","name","email","userId","dietPlan","weeklyGoal","API_URL","process","env","REACT_APP_API_URL","hash","window","location","replace","toLowerCase","handleNavClick","page","formattedPage","handleImageChange","event","target","files","processImage","_recipesData$recipes","formData","FormData","append","ocrResponse","fetch","method","body","ok","errorText","Error","ocrData","json","error","extractedText","ingredients","split","map","item","filter","trim","length","recipesResponse","headers","JSON","stringify","recipesData","reduce","acc","recipe","id","message","includes","fetchRecipeDetails","title","prev","response","details","goBackToList","toggleDarkMode","themeClasses","bg","container","card","cardHover","button","buttonPrimary","subheading","infoBox","input","nutrients","nutrientsSubtext","listText","navText","navActive","renderPageContent","_selectedRecipe$nutri","_selectedRecipe$nutri2","_selectedRecipe$nutri3","_selectedRecipe$nutri4","_selectedRecipe$ingre","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onError","e","encodeURIComponent","calories","protein","carbohydrates","fat","ing","i","instructions","type","onChange","accept","disabled","r","className","_c","$RefreshReg$"],"sources":["C:/Users/bivin/Favorites/Desktop/sem7/fsd/ocr-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n// Main App component for the diet recommender application.\r\nconst App = () => {\r\n    // State variables\r\n    const [image, setImage] = useState(null);\r\n    const [text, setText] = useState('');\r\n    const [status, setStatus] = useState('Idle');\r\n    const [recipes, setRecipes] = useState([]);\r\n    const [selectedRecipe, setSelectedRecipe] = useState(null);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [isDarkMode, setIsDarkMode] = useState(true);\r\n    const [activePage, setActivePage] = useState('home');\r\n    const [imageLoading, setImageLoading] = useState({});\r\n    const [userProfile, setUserProfile] = useState({\r\n        name: 'Paula',\r\n        email: 'paula@zylker.com',\r\n        userId: '630083685',\r\n        dietPlan: 'Your custom diet plan will appear here after a recommendation is generated.',\r\n        weeklyGoal: 'N/A'\r\n    });\r\n\r\n    // Base API URL from environment variable\r\n    const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n    // Sync activePage with URL hash\r\n    useEffect(() => {\r\n        const hash = window.location.hash.replace('#', '').toLowerCase() || 'home';\r\n        setActivePage(hash);\r\n    }, []);\r\n\r\n    // Handle navigation click and update URL hash\r\n    const handleNavClick = (page) => {\r\n        const formattedPage = page.toLowerCase().replace(' ', '-');\r\n        window.location.hash = formattedPage;\r\n        setActivePage(formattedPage);\r\n    };\r\n\r\n    // Handles the file input change event\r\n    const handleImageChange = (event) => {\r\n        if (event.target.files && event.target.files[0]) {\r\n            setImage(event.target.files[0]);\r\n            setText('');\r\n            setRecipes([]);\r\n            setSelectedRecipe(null);\r\n            setErrorMessage('');\r\n            setStatus('Image selected');\r\n            setImageLoading({});\r\n        }\r\n    };\r\n\r\n    // Main function to process the image and find recipes\r\n    const processImage = async () => {\r\n        setErrorMessage('');\r\n        if (!image) {\r\n            setErrorMessage('Please select an image first.');\r\n            return;\r\n        }\r\n\r\n        setStatus('Uploading and processing...');\r\n        setText('');\r\n        setRecipes([]);\r\n        setSelectedRecipe(null);\r\n        setImageLoading({});\r\n\r\n        try {\r\n            // Step 1: Upload image for OCR\r\n            const formData = new FormData();\r\n            formData.append('image', image);\r\n\r\n            const ocrResponse = await fetch(`${API_URL}/ocr`, {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n\r\n            if (!ocrResponse.ok) {\r\n                const errorText = await ocrResponse.text();\r\n                throw new Error(`OCR failed with status: ${ocrResponse.status}. Server response: ${errorText}`);\r\n            }\r\n            const ocrData = await ocrResponse.json();\r\n            if (ocrData.error) {\r\n                throw new Error(ocrData.error);\r\n            }\r\n            const extractedText = ocrData.text;\r\n            setText(extractedText || 'No text extracted.');\r\n\r\n            // Step 2: Format text into a list of ingredients\r\n            const ingredients = extractedText\r\n                .toLowerCase()\r\n                .split(/\\s*[\\r\\n-]\\s*/)\r\n                .map(item => item.replace(/^\\d+(\\.\\d+)?\\s*(cups?|tbsp|tsp|oz|g|kg|lb)?\\s*/i, ''))\r\n                .map(item => item.replace(/\\b(and|or|with|to|taste)\\b\\s*/g, ''))\r\n                .filter(item => item.trim() !== '' && item.length > 2);\r\n\r\n            if (ingredients.length === 0) {\r\n                setStatus('No valid ingredients found in the image.');\r\n                return;\r\n            }\r\n\r\n            // Step 3: Send ingredients to get a list of recipes\r\n            setStatus('Searching local database for recipes...');\r\n            const recipesResponse = await fetch(`${API_URL}/get_recipes`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ ingredients }),\r\n            });\r\n\r\n            if (!recipesResponse.ok) {\r\n                const errorText = await recipesResponse.text();\r\n                throw new Error(`Recipe lookup failed with status: ${recipesResponse.status}. Server response: ${errorText || 'No additional details'}`);\r\n            }\r\n            const recipesData = await recipesResponse.json();\r\n\r\n            setRecipes(recipesData.recipes || []);\r\n            setImageLoading(recipesData.recipes?.reduce((acc, recipe) => ({ ...acc, [recipe.id]: true }), {}) || {});\r\n            setStatus('Complete!');\r\n        } catch (error) {\r\n            setErrorMessage(error.message.includes('Failed to fetch')\r\n                ? `Cannot connect to the backend server. Please ensure it is running at ${API_URL}.`\r\n                : `Error: ${error.message}`);\r\n            setStatus('An error occurred.');\r\n            setRecipes([]);\r\n            setImageLoading({});\r\n        }\r\n    };\r\n\r\n    // Fetch detailed information for a specific recipe\r\n    const fetchRecipeDetails = async (id, title) => {\r\n        setStatus('Fetching recipe details...');\r\n        setErrorMessage('');\r\n        setImageLoading(prev => ({ ...prev, [id]: true }));\r\n        try {\r\n            const response = await fetch(`${API_URL}/get_recipe_details/${id}`);\r\n            if (!response.ok) throw new Error(`Failed to fetch recipe details: ${response.status}`);\r\n            const details = await response.json();\r\n            setSelectedRecipe(details);\r\n            setStatus('Details loaded!');\r\n        } catch (error) {\r\n            setErrorMessage('Failed to load details. Please try again.');\r\n            setStatus('Failed to load details.');\r\n        } finally {\r\n            setImageLoading(prev => ({ ...prev, [id]: false }));\r\n        }\r\n    };\r\n\r\n    const goBackToList = () => {\r\n        setSelectedRecipe(null);\r\n        setStatus('Complete!');\r\n        setImageLoading({});\r\n    };\r\n\r\n    const toggleDarkMode = () => setIsDarkMode(prev => !prev);\r\n\r\n    const themeClasses = isDarkMode\r\n        ? {\r\n              bg: 'bg-gray-900',\r\n              text: 'text-white',\r\n              container: 'bg-gray-800 border-gray-700',\r\n              card: 'bg-gray-700',\r\n              cardHover: 'hover:bg-gray-600',\r\n              button: 'bg-gray-700 text-gray-200 hover:bg-gray-600',\r\n              buttonPrimary: 'bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700',\r\n              subheading: 'text-purple-300',\r\n              infoBox: 'bg-gray-700 border-gray-700',\r\n              input: 'file:text-blue-700 file:bg-blue-50 hover:file:bg-blue-100',\r\n              nutrients: 'bg-gray-600 text-gray-100',\r\n              nutrientsSubtext: 'text-gray-400',\r\n              listText: 'text-gray-300',\r\n              navText: 'text-gray-300 hover:text-white',\r\n              navActive: 'border-b-2 border-purple-400',\r\n          }\r\n        : {\r\n              bg: 'bg-gray-100',\r\n              text: 'text-gray-900',\r\n              container: 'bg-white border-gray-300',\r\n              card: 'bg-gray-200',\r\n              cardHover: 'hover:bg-gray-300',\r\n              button: 'bg-gray-300 text-gray-800 hover:bg-gray-400',\r\n              buttonPrimary: 'bg-gradient-to-r from-indigo-500 to-teal-600 hover:from-indigo-600 hover:to-teal-700',\r\n              subheading: 'text-indigo-500',\r\n              infoBox: 'bg-gray-200 border-gray-300',\r\n              input: 'file:text-indigo-700 file:bg-indigo-50 hover:file:bg-indigo-100',\r\n              nutrients: 'bg-gray-300 text-gray-800',\r\n              nutrientsSubtext: 'text-gray-600',\r\n              listText: 'text-gray-700',\r\n              navText: 'text-gray-600 hover:text-gray-900',\r\n              navActive: 'border-b-2 border-indigo-500',\r\n          };\r\n\r\n    const renderPageContent = () => {\r\n        if (activePage === 'home') {\r\n            if (selectedRecipe) {\r\n                return (\r\n                    <div>\r\n                        <button onClick={goBackToList}>← Back to Recipes</button>\r\n                        <h2>{selectedRecipe.title}</h2>\r\n                        <img\r\n                            src={selectedRecipe.image}\r\n                            alt={selectedRecipe.title}\r\n                            onError={(e) => {\r\n                                e.target.src = `https://placehold.co/400x300/e2e8f0/888?text=${encodeURIComponent(selectedRecipe.title)}`;\r\n                            }}\r\n                        />\r\n                        <div>\r\n                            <h3>Nutrition (per serving):</h3>\r\n                            <p>Calories: {selectedRecipe.nutrients?.calories || 'N/A'}</p>\r\n                            <p>Protein: {selectedRecipe.nutrients?.protein || 'N/A'}</p>\r\n                            <p>Carbs: {selectedRecipe.nutrients?.carbohydrates || 'N/A'}</p>\r\n                            <p>Fat: {selectedRecipe.nutrients?.fat || 'N/A'}</p>\r\n                        </div>\r\n                        <div>\r\n                            <h3>Ingredients:</h3>\r\n                            <ul>{selectedRecipe.ingredients?.map((ing, i) => <li key={i}>{ing}</li>)}</ul>\r\n                        </div>\r\n                        <div>\r\n                            <h3>Instructions:</h3>\r\n                            <div>{selectedRecipe.instructions || 'Instructions not available.'}</div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            return (\r\n                <div>\r\n                    <input type=\"file\" onChange={handleImageChange} accept=\"image/*\" />\r\n                    <button onClick={processImage} disabled={!image || status.includes('...')}>Find Recipes</button>\r\n                    {text && <pre>{text}</pre>}\r\n                    {recipes.map(r => (\r\n                        <div key={r.id} onClick={() => fetchRecipeDetails(r.id, r.title)}>\r\n                            <img src={r.image} alt={r.title} />\r\n                            <p>{r.title}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            );\r\n        }\r\n        return <div>Page not found.</div>;\r\n    };\r\n\r\n    return (\r\n        <div className={`${themeClasses.bg} ${themeClasses.text} min-h-screen`}>\r\n            <header>\r\n                <h1>PlanMyPlate</h1>\r\n                <button onClick={toggleDarkMode}>{isDarkMode ? '🌞 Light Mode' : '🌙 Dark Mode'}</button>\r\n            </header>\r\n            <main>{renderPageContent()}</main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,MAAM,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,MAAM,CAAC;EACpD,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC;IAC3C0B,IAAI,EAAE,OAAO;IACbC,KAAK,EAAE,kBAAkB;IACzBC,MAAM,EAAE,WAAW;IACnBC,QAAQ,EAAE,6EAA6E;IACvFC,UAAU,EAAE;EAChB,CAAC,CAAC;;EAEF;EACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;EAExE;EACAjC,SAAS,CAAC,MAAM;IACZ,MAAMkC,IAAI,GAAGC,MAAM,CAACC,QAAQ,CAACF,IAAI,CAACG,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAACC,WAAW,CAAC,CAAC,IAAI,MAAM;IAC1ElB,aAAa,CAACc,IAAI,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,cAAc,GAAIC,IAAI,IAAK;IAC7B,MAAMC,aAAa,GAAGD,IAAI,CAACF,WAAW,CAAC,CAAC,CAACD,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;IAC1DF,MAAM,CAACC,QAAQ,CAACF,IAAI,GAAGO,aAAa;IACpCrB,aAAa,CAACqB,aAAa,CAAC;EAChC,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACjC,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MAC7CvC,QAAQ,CAACqC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;MAC/BrC,OAAO,CAAC,EAAE,CAAC;MACXI,UAAU,CAAC,EAAE,CAAC;MACdE,iBAAiB,CAAC,IAAI,CAAC;MACvBE,eAAe,CAAC,EAAE,CAAC;MACnBN,SAAS,CAAC,gBAAgB,CAAC;MAC3BY,eAAe,CAAC,CAAC,CAAC,CAAC;IACvB;EACJ,CAAC;;EAED;EACA,MAAMwB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B9B,eAAe,CAAC,EAAE,CAAC;IACnB,IAAI,CAACX,KAAK,EAAE;MACRW,eAAe,CAAC,+BAA+B,CAAC;MAChD;IACJ;IAEAN,SAAS,CAAC,6BAA6B,CAAC;IACxCF,OAAO,CAAC,EAAE,CAAC;IACXI,UAAU,CAAC,EAAE,CAAC;IACdE,iBAAiB,CAAC,IAAI,CAAC;IACvBQ,eAAe,CAAC,CAAC,CAAC,CAAC;IAEnB,IAAI;MAAA,IAAAyB,oBAAA;MACA;MACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE7C,KAAK,CAAC;MAE/B,MAAM8C,WAAW,GAAG,MAAMC,KAAK,CAAC,GAAGtB,OAAO,MAAM,EAAE;QAC9CuB,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACV,CAAC,CAAC;MAEF,IAAI,CAACG,WAAW,CAACI,EAAE,EAAE;QACjB,MAAMC,SAAS,GAAG,MAAML,WAAW,CAAC5C,IAAI,CAAC,CAAC;QAC1C,MAAM,IAAIkD,KAAK,CAAC,2BAA2BN,WAAW,CAAC1C,MAAM,sBAAsB+C,SAAS,EAAE,CAAC;MACnG;MACA,MAAME,OAAO,GAAG,MAAMP,WAAW,CAACQ,IAAI,CAAC,CAAC;MACxC,IAAID,OAAO,CAACE,KAAK,EAAE;QACf,MAAM,IAAIH,KAAK,CAACC,OAAO,CAACE,KAAK,CAAC;MAClC;MACA,MAAMC,aAAa,GAAGH,OAAO,CAACnD,IAAI;MAClCC,OAAO,CAACqD,aAAa,IAAI,oBAAoB,CAAC;;MAE9C;MACA,MAAMC,WAAW,GAAGD,aAAa,CAC5BvB,WAAW,CAAC,CAAC,CACbyB,KAAK,CAAC,eAAe,CAAC,CACtBC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAAC5B,OAAO,CAAC,iDAAiD,EAAE,EAAE,CAAC,CAAC,CAChF2B,GAAG,CAACC,IAAI,IAAIA,IAAI,CAAC5B,OAAO,CAAC,gCAAgC,EAAE,EAAE,CAAC,CAAC,CAC/D6B,MAAM,CAACD,IAAI,IAAIA,IAAI,CAACE,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIF,IAAI,CAACG,MAAM,GAAG,CAAC,CAAC;MAE1D,IAAIN,WAAW,CAACM,MAAM,KAAK,CAAC,EAAE;QAC1B1D,SAAS,CAAC,0CAA0C,CAAC;QACrD;MACJ;;MAEA;MACAA,SAAS,CAAC,yCAAyC,CAAC;MACpD,MAAM2D,eAAe,GAAG,MAAMjB,KAAK,CAAC,GAAGtB,OAAO,cAAc,EAAE;QAC1DuB,MAAM,EAAE,MAAM;QACdiB,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/ChB,IAAI,EAAEiB,IAAI,CAACC,SAAS,CAAC;UAAEV;QAAY,CAAC;MACxC,CAAC,CAAC;MAEF,IAAI,CAACO,eAAe,CAACd,EAAE,EAAE;QACrB,MAAMC,SAAS,GAAG,MAAMa,eAAe,CAAC9D,IAAI,CAAC,CAAC;QAC9C,MAAM,IAAIkD,KAAK,CAAC,qCAAqCY,eAAe,CAAC5D,MAAM,sBAAsB+C,SAAS,IAAI,uBAAuB,EAAE,CAAC;MAC5I;MACA,MAAMiB,WAAW,GAAG,MAAMJ,eAAe,CAACV,IAAI,CAAC,CAAC;MAEhD/C,UAAU,CAAC6D,WAAW,CAAC9D,OAAO,IAAI,EAAE,CAAC;MACrCW,eAAe,CAAC,EAAAyB,oBAAA,GAAA0B,WAAW,CAAC9D,OAAO,cAAAoC,oBAAA,uBAAnBA,oBAAA,CAAqB2B,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,MAAM;QAAE,GAAGD,GAAG;QAAE,CAACC,MAAM,CAACC,EAAE,GAAG;MAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,CAAC,CAAC;MACxGnE,SAAS,CAAC,WAAW,CAAC;IAC1B,CAAC,CAAC,OAAOkD,KAAK,EAAE;MACZ5C,eAAe,CAAC4C,KAAK,CAACkB,OAAO,CAACC,QAAQ,CAAC,iBAAiB,CAAC,GACnD,wEAAwEjD,OAAO,GAAG,GAClF,UAAU8B,KAAK,CAACkB,OAAO,EAAE,CAAC;MAChCpE,SAAS,CAAC,oBAAoB,CAAC;MAC/BE,UAAU,CAAC,EAAE,CAAC;MACdU,eAAe,CAAC,CAAC,CAAC,CAAC;IACvB;EACJ,CAAC;;EAED;EACA,MAAM0D,kBAAkB,GAAG,MAAAA,CAAOH,EAAE,EAAEI,KAAK,KAAK;IAC5CvE,SAAS,CAAC,4BAA4B,CAAC;IACvCM,eAAe,CAAC,EAAE,CAAC;IACnBM,eAAe,CAAC4D,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACL,EAAE,GAAG;IAAK,CAAC,CAAC,CAAC;IAClD,IAAI;MACA,MAAMM,QAAQ,GAAG,MAAM/B,KAAK,CAAC,GAAGtB,OAAO,uBAAuB+C,EAAE,EAAE,CAAC;MACnE,IAAI,CAACM,QAAQ,CAAC5B,EAAE,EAAE,MAAM,IAAIE,KAAK,CAAC,mCAAmC0B,QAAQ,CAAC1E,MAAM,EAAE,CAAC;MACvF,MAAM2E,OAAO,GAAG,MAAMD,QAAQ,CAACxB,IAAI,CAAC,CAAC;MACrC7C,iBAAiB,CAACsE,OAAO,CAAC;MAC1B1E,SAAS,CAAC,iBAAiB,CAAC;IAChC,CAAC,CAAC,OAAOkD,KAAK,EAAE;MACZ5C,eAAe,CAAC,2CAA2C,CAAC;MAC5DN,SAAS,CAAC,yBAAyB,CAAC;IACxC,CAAC,SAAS;MACNY,eAAe,CAAC4D,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACL,EAAE,GAAG;MAAM,CAAC,CAAC,CAAC;IACvD;EACJ,CAAC;EAED,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACvBvE,iBAAiB,CAAC,IAAI,CAAC;IACvBJ,SAAS,CAAC,WAAW,CAAC;IACtBY,eAAe,CAAC,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,MAAMgE,cAAc,GAAGA,CAAA,KAAMpE,aAAa,CAACgE,IAAI,IAAI,CAACA,IAAI,CAAC;EAEzD,MAAMK,YAAY,GAAGtE,UAAU,GACzB;IACIuE,EAAE,EAAE,aAAa;IACjBjF,IAAI,EAAE,YAAY;IAClBkF,SAAS,EAAE,6BAA6B;IACxCC,IAAI,EAAE,aAAa;IACnBC,SAAS,EAAE,mBAAmB;IAC9BC,MAAM,EAAE,6CAA6C;IACrDC,aAAa,EAAE,sFAAsF;IACrGC,UAAU,EAAE,iBAAiB;IAC7BC,OAAO,EAAE,6BAA6B;IACtCC,KAAK,EAAE,2DAA2D;IAClEC,SAAS,EAAE,2BAA2B;IACtCC,gBAAgB,EAAE,eAAe;IACjCC,QAAQ,EAAE,eAAe;IACzBC,OAAO,EAAE,gCAAgC;IACzCC,SAAS,EAAE;EACf,CAAC,GACD;IACIb,EAAE,EAAE,aAAa;IACjBjF,IAAI,EAAE,eAAe;IACrBkF,SAAS,EAAE,0BAA0B;IACrCC,IAAI,EAAE,aAAa;IACnBC,SAAS,EAAE,mBAAmB;IAC9BC,MAAM,EAAE,6CAA6C;IACrDC,aAAa,EAAE,sFAAsF;IACrGC,UAAU,EAAE,iBAAiB;IAC7BC,OAAO,EAAE,6BAA6B;IACtCC,KAAK,EAAE,iEAAiE;IACxEC,SAAS,EAAE,2BAA2B;IACtCC,gBAAgB,EAAE,eAAe;IACjCC,QAAQ,EAAE,eAAe;IACzBC,OAAO,EAAE,mCAAmC;IAC5CC,SAAS,EAAE;EACf,CAAC;EAEP,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAInF,UAAU,KAAK,MAAM,EAAE;MACvB,IAAIN,cAAc,EAAE;QAAA,IAAA0F,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,qBAAA;QAChB,oBACIzG,OAAA;UAAA0G,QAAA,gBACI1G,OAAA;YAAQ2G,OAAO,EAAExB,YAAa;YAAAuB,QAAA,EAAC;UAAiB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACzD/G,OAAA;YAAA0G,QAAA,EAAK/F,cAAc,CAACoE;UAAK;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC/B/G,OAAA;YACIgH,GAAG,EAAErG,cAAc,CAACR,KAAM;YAC1B8G,GAAG,EAAEtG,cAAc,CAACoE,KAAM;YAC1BmC,OAAO,EAAGC,CAAC,IAAK;cACZA,CAAC,CAACzE,MAAM,CAACsE,GAAG,GAAG,gDAAgDI,kBAAkB,CAACzG,cAAc,CAACoE,KAAK,CAAC,EAAE;YAC7G;UAAE;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACF/G,OAAA;YAAA0G,QAAA,gBACI1G,OAAA;cAAA0G,QAAA,EAAI;YAAwB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjC/G,OAAA;cAAA0G,QAAA,GAAG,YAAU,EAAC,EAAAL,qBAAA,GAAA1F,cAAc,CAACoF,SAAS,cAAAM,qBAAA,uBAAxBA,qBAAA,CAA0BgB,QAAQ,KAAI,KAAK;YAAA;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC9D/G,OAAA;cAAA0G,QAAA,GAAG,WAAS,EAAC,EAAAJ,sBAAA,GAAA3F,cAAc,CAACoF,SAAS,cAAAO,sBAAA,uBAAxBA,sBAAA,CAA0BgB,OAAO,KAAI,KAAK;YAAA;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC5D/G,OAAA;cAAA0G,QAAA,GAAG,SAAO,EAAC,EAAAH,sBAAA,GAAA5F,cAAc,CAACoF,SAAS,cAAAQ,sBAAA,uBAAxBA,sBAAA,CAA0BgB,aAAa,KAAI,KAAK;YAAA;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChE/G,OAAA;cAAA0G,QAAA,GAAG,OAAK,EAAC,EAAAF,sBAAA,GAAA7F,cAAc,CAACoF,SAAS,cAAAS,sBAAA,uBAAxBA,sBAAA,CAA0BgB,GAAG,KAAI,KAAK;YAAA;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CAAC,eACN/G,OAAA;YAAA0G,QAAA,gBACI1G,OAAA;cAAA0G,QAAA,EAAI;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrB/G,OAAA;cAAA0G,QAAA,GAAAD,qBAAA,GAAK9F,cAAc,CAACiD,WAAW,cAAA6C,qBAAA,uBAA1BA,qBAAA,CAA4B3C,GAAG,CAAC,CAAC2D,GAAG,EAAEC,CAAC,kBAAK1H,OAAA;gBAAA0G,QAAA,EAAae;cAAG,GAAPC,CAAC;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7E,CAAC,eACN/G,OAAA;YAAA0G,QAAA,gBACI1G,OAAA;cAAA0G,QAAA,EAAI;YAAa;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtB/G,OAAA;cAAA0G,QAAA,EAAM/F,cAAc,CAACgH,YAAY,IAAI;YAA6B;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAEd;MACA,oBACI/G,OAAA;QAAA0G,QAAA,gBACI1G,OAAA;UAAO4H,IAAI,EAAC,MAAM;UAACC,QAAQ,EAAErF,iBAAkB;UAACsF,MAAM,EAAC;QAAS;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnE/G,OAAA;UAAQ2G,OAAO,EAAE/D,YAAa;UAACmF,QAAQ,EAAE,CAAC5H,KAAK,IAAII,MAAM,CAACsE,QAAQ,CAAC,KAAK,CAAE;UAAA6B,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC/F1G,IAAI,iBAAIL,OAAA;UAAA0G,QAAA,EAAMrG;QAAI;UAAAuG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EACzBtG,OAAO,CAACqD,GAAG,CAACkE,CAAC,iBACVhI,OAAA;UAAgB2G,OAAO,EAAEA,CAAA,KAAM7B,kBAAkB,CAACkD,CAAC,CAACrD,EAAE,EAAEqD,CAAC,CAACjD,KAAK,CAAE;UAAA2B,QAAA,gBAC7D1G,OAAA;YAAKgH,GAAG,EAAEgB,CAAC,CAAC7H,KAAM;YAAC8G,GAAG,EAAEe,CAAC,CAACjD;UAAM;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnC/G,OAAA;YAAA0G,QAAA,EAAIsB,CAAC,CAACjD;UAAK;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAFViB,CAAC,CAACrD,EAAE;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGT,CACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAEd;IACA,oBAAO/G,OAAA;MAAA0G,QAAA,EAAK;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACrC,CAAC;EAED,oBACI/G,OAAA;IAAKiI,SAAS,EAAE,GAAG5C,YAAY,CAACC,EAAE,IAAID,YAAY,CAAChF,IAAI,eAAgB;IAAAqG,QAAA,gBACnE1G,OAAA;MAAA0G,QAAA,gBACI1G,OAAA;QAAA0G,QAAA,EAAI;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpB/G,OAAA;QAAQ2G,OAAO,EAAEvB,cAAe;QAAAsB,QAAA,EAAE3F,UAAU,GAAG,eAAe,GAAG;MAAc;QAAA6F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrF,CAAC,eACT/G,OAAA;MAAA0G,QAAA,EAAON,iBAAiB,CAAC;IAAC;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEd,CAAC;AAAC7G,EAAA,CApPID,GAAG;AAAAiI,EAAA,GAAHjI,GAAG;AAsPT,eAAeA,GAAG;AAAC,IAAAiI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}