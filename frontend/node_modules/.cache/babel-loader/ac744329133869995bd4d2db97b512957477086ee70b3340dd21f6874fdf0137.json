{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bivin\\\\Favorites\\\\Desktop\\\\sem7\\\\fsd\\\\ocr-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Main App component for the recipe suggester\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  var _selectedRecipe$ingre;\n  // State variables to manage the app's UI and data\n  const [image, setImage] = useState(null); // Stores the selected image file\n  const [extractedText, setExtractedText] = useState(''); // Stores text extracted from the image\n  const [status, setStatus] = useState('Select an image to get started.'); // Displays current status to the user\n  const [recipes, setRecipes] = useState([]); // Stores the list of suggested recipes\n  const [selectedRecipe, setSelectedRecipe] = useState(null); // Stores details for a single selected recipe\n  const [errorMessage, setErrorMessage] = useState(''); // Stores any error messages to display\n  const [showStatus, setShowStatus] = useState(true); // Controls visibility of the status message\n\n  // Gemini API configuration\n  const API_KEY = \"\"; // Do not change this, Canvas will provide the key at runtime\n  const OCR_MODEL = \"gemini-2.5-flash-preview-05-20\";\n  const RECIPE_GENERATION_MODEL = \"gemini-2.5-flash-preview-05-20\";\n  const BASE_API_URL = \"https://generativelanguage.googleapis.com/v1beta/models/\";\n\n  /**\r\n   * Helper function to handle fetch requests with exponential backoff for retries.\r\n   * This improves robustness against temporary network issues or rate limits.\r\n   * @param {string} url - The URL to fetch from.\r\n   * @param {object} options - Fetch options (method, headers, body, etc.).\r\n   * @param {number} retries - Number of retry attempts.\r\n   */\n  const fetchWithBackoff = async (url, options, retries = 3) => {\n    for (let i = 0; i < retries; i++) {\n      try {\n        const response = await fetch(url, options);\n        if (response.ok) {\n          return response;\n        } else if (response.status === 429) {\n          const delay = Math.pow(2, i) * 1000 + Math.random() * 1000;\n          console.warn(`Rate limit hit. Retrying in ${delay}ms...`);\n          await new Promise(res => setTimeout(res, delay));\n          continue;\n        } else {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n      } catch (error) {\n        if (i === retries - 1) throw error;\n      }\n    }\n  };\n\n  /**\r\n   * Handles the file input change event.\r\n   * Resets the app state and displays a preview of the selected image.\r\n   * @param {object} event - The file input change event.\r\n   */\n  const handleImageChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      setImage(file);\n      setExtractedText('');\n      setRecipes([]);\n      setSelectedRecipe(null);\n      setErrorMessage('');\n      setShowStatus(true);\n      setStatus('Image selected. Click \"Find Recipes\" to analyze.');\n    }\n  };\n\n  /**\r\n   * Processes the selected image to extract text and then find recipes.\r\n   * This is the main logic function for the application.\r\n   */\n  const processImage = async () => {\n    setErrorMessage('');\n    if (!image) {\n      setErrorMessage('Please select an image first.');\n      return;\n    }\n    setRecipes([]);\n    setSelectedRecipe(null);\n    setStatus('Analyzing image for ingredients...');\n\n    // Convert the image file to a Base64 string for the API\n    const reader = new FileReader();\n    reader.readAsDataURL(image);\n    reader.onload = async () => {\n      const base64Data = reader.result.split(',')[1];\n      try {\n        var _ocrData$candidates, _ocrData$candidates$, _ocrData$candidates$$, _ocrData$candidates$$2, _ocrData$candidates$$3, _recipeData$candidate, _recipeData$candidate2, _recipeData$candidate3, _recipeData$candidate4, _recipeData$candidate5;\n        // Step 1: Use Gemini API to perform OCR (image to text)\n        const ocrPayload = {\n          contents: [{\n            parts: [{\n              text: \"Describe the text content and objects in this image. Focus on listing any ingredients, food items, or cooking materials.\"\n            }, {\n              inlineData: {\n                mimeType: image.type,\n                data: base64Data\n              }\n            }]\n          }]\n        };\n        const ocrUrl = `${BASE_API_URL}${OCR_MODEL}:generateContent?key=${API_KEY}`;\n        const ocrResponse = await fetchWithBackoff(ocrUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(ocrPayload)\n        });\n        const ocrData = await ocrResponse.json();\n        const textFromImage = (ocrData === null || ocrData === void 0 ? void 0 : (_ocrData$candidates = ocrData.candidates) === null || _ocrData$candidates === void 0 ? void 0 : (_ocrData$candidates$ = _ocrData$candidates[0]) === null || _ocrData$candidates$ === void 0 ? void 0 : (_ocrData$candidates$$ = _ocrData$candidates$.content) === null || _ocrData$candidates$$ === void 0 ? void 0 : (_ocrData$candidates$$2 = _ocrData$candidates$$.parts) === null || _ocrData$candidates$$2 === void 0 ? void 0 : (_ocrData$candidates$$3 = _ocrData$candidates$$2[0]) === null || _ocrData$candidates$$3 === void 0 ? void 0 : _ocrData$candidates$$3.text) || '';\n        setExtractedText(textFromImage);\n        if (!textFromImage) {\n          setStatus('No recognizable text or ingredients found. Please try a different image.');\n          setShowStatus(true);\n          return;\n        }\n\n        // Step 2: Use Gemini API to get a structured list of recipes\n        setStatus('Generating recipes based on ingredients...');\n        const recipePrompt = `Given the following text, provide a list of 5 recipes. The recipes should be simple and use as many of the listed ingredients as possible.\n        \n        Text: \"${textFromImage}\"\n        \n        Provide the response as a JSON array of objects. Each object should have an \"id\" (a unique number), \"title\" (the recipe name), and \"image\" (a placeholder image URL using https://placehold.co/ and the recipe title). Do not include any other text or markdown.`;\n        const recipePayload = {\n          contents: [{\n            parts: [{\n              text: recipePrompt\n            }]\n          }],\n          generationConfig: {\n            responseMimeType: \"application/json\",\n            responseSchema: {\n              type: \"ARRAY\",\n              items: {\n                type: \"OBJECT\",\n                properties: {\n                  \"id\": {\n                    \"type\": \"NUMBER\"\n                  },\n                  \"title\": {\n                    \"type\": \"STRING\"\n                  },\n                  \"image\": {\n                    \"type\": \"STRING\"\n                  }\n                }\n              }\n            }\n          }\n        };\n        const recipeUrl = `${BASE_API_URL}${RECIPE_GENERATION_MODEL}:generateContent?key=${API_KEY}`;\n        const recipeResponse = await fetchWithBackoff(recipeUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(recipePayload)\n        });\n        const recipeData = await recipeResponse.json();\n        const recipesJson = JSON.parse((recipeData === null || recipeData === void 0 ? void 0 : (_recipeData$candidate = recipeData.candidates) === null || _recipeData$candidate === void 0 ? void 0 : (_recipeData$candidate2 = _recipeData$candidate[0]) === null || _recipeData$candidate2 === void 0 ? void 0 : (_recipeData$candidate3 = _recipeData$candidate2.content) === null || _recipeData$candidate3 === void 0 ? void 0 : (_recipeData$candidate4 = _recipeData$candidate3.parts) === null || _recipeData$candidate4 === void 0 ? void 0 : (_recipeData$candidate5 = _recipeData$candidate4[0]) === null || _recipeData$candidate5 === void 0 ? void 0 : _recipeData$candidate5.text) || \"[]\");\n        setRecipes(recipesJson);\n        setStatus('Recipes generated successfully!');\n        setShowStatus(false);\n      } catch (error) {\n        console.error('API Error:', error);\n        setErrorMessage('An error occurred while processing your request. Please try again.');\n        setStatus('Error.');\n        setShowStatus(true);\n      }\n    };\n  };\n\n  /**\r\n   * Fetches and displays detailed information for a single recipe.\r\n   * @param {object} recipe - The recipe object from the list.\r\n   */\n  const fetchRecipeDetails = async recipe => {\n    setErrorMessage('');\n    setStatus('Fetching recipe details...');\n    setShowStatus(true);\n    try {\n      var _detailsData$candidat, _detailsData$candidat2, _detailsData$candidat3, _detailsData$candidat4, _detailsData$candidat5;\n      const detailsPrompt = `Provide a detailed recipe for \"${recipe.title}\". Include the following information in a JSON object:\n      - \"id\": The same ID as the input recipe.\n      - \"title\": The recipe title.\n      - \"image\": The same image URL.\n      - \"nutrients\": An object with \"calories\", \"protein\", \"carbohydrates\", and \"fat\" (provide approximate values).\n      - \"ingredients\": An array of strings with ingredient names and quantities.\n      - \"instructions\": A detailed, step-by-step string of instructions.\n      \n      Do not include any other text or markdown outside the JSON object.`;\n      const detailsPayload = {\n        contents: [{\n          parts: [{\n            text: detailsPrompt\n          }]\n        }],\n        generationConfig: {\n          responseMimeType: \"application/json\",\n          responseSchema: {\n            type: \"OBJECT\",\n            properties: {\n              \"id\": {\n                \"type\": \"NUMBER\"\n              },\n              \"title\": {\n                \"type\": \"STRING\"\n              },\n              \"image\": {\n                \"type\": \"STRING\"\n              },\n              \"nutrients\": {\n                \"type\": \"OBJECT\",\n                \"properties\": {\n                  \"calories\": {\n                    \"type\": \"NUMBER\"\n                  },\n                  \"protein\": {\n                    \"type\": \"NUMBER\"\n                  },\n                  \"carbohydrates\": {\n                    \"type\": \"NUMBER\"\n                  },\n                  \"fat\": {\n                    \"type\": \"NUMBER\"\n                  }\n                }\n              },\n              \"ingredients\": {\n                \"type\": \"ARRAY\",\n                \"items\": {\n                  \"type\": \"STRING\"\n                }\n              },\n              \"instructions\": {\n                \"type\": \"STRING\"\n              }\n            }\n          }\n        }\n      };\n      const detailsUrl = `${BASE_API_URL}${RECIPE_GENERATION_MODEL}:generateContent?key=${API_KEY}`;\n      const detailsResponse = await fetchWithBackoff(detailsUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(detailsPayload)\n      });\n      const detailsData = await detailsResponse.json();\n      const detailsJson = JSON.parse((detailsData === null || detailsData === void 0 ? void 0 : (_detailsData$candidat = detailsData.candidates) === null || _detailsData$candidat === void 0 ? void 0 : (_detailsData$candidat2 = _detailsData$candidat[0]) === null || _detailsData$candidat2 === void 0 ? void 0 : (_detailsData$candidat3 = _detailsData$candidat2.content) === null || _detailsData$candidat3 === void 0 ? void 0 : (_detailsData$candidat4 = _detailsData$candidat3.parts) === null || _detailsData$candidat4 === void 0 ? void 0 : (_detailsData$candidat5 = _detailsData$candidat4[0]) === null || _detailsData$candidat5 === void 0 ? void 0 : _detailsData$candidat5.text) || \"{}\");\n      setSelectedRecipe(detailsJson);\n      setStatus('Details loaded!');\n      setShowStatus(false);\n    } catch (error) {\n      console.error('API Error:', error);\n      setErrorMessage('Failed to load recipe details. Please try again.');\n      setStatus('Error fetching details.');\n      setShowStatus(true);\n    }\n  };\n\n  /**\r\n   * Resets the view back to the recipe list from the detailed view.\r\n   */\n  const goBackToList = () => {\n    setSelectedRecipe(null);\n    setStatus('Ready to explore more recipes.');\n    setShowStatus(false);\n  };\n\n  /**\r\n   * Copies the extracted text to the clipboard.\r\n   */\n  const copyExtractedText = () => {\n    if (extractedText) {\n      navigator.clipboard.writeText(extractedText).then(() => {\n        setStatus('Extracted text copied!');\n        setShowStatus(true);\n      }).catch(err => {\n        console.error('Failed to copy text:', err);\n        setErrorMessage('Could not copy text to clipboard.');\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-900 min-h-screen text-white font-sans flex flex-col items-center p-4 sm:p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"script\", {\n      src: \"https://cdn.tailwindcss.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"w-full max-w-4xl text-center mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl sm:text-5xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-purple-500 rounded-lg\",\n        children: \"OCR & Recipe Suggester\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2 text-gray-300 text-lg\",\n        children: \"Snap a pic of your ingredients and find out what to cook!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"w-full max-w-4xl bg-gray-800 p-6 rounded-3xl shadow-lg border border-gray-700\",\n      children: selectedRecipe ?\n      /*#__PURE__*/\n      // Display detailed recipe view\n      _jsxDEV(\"div\", {\n        className: \"animate-fade-in-up\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goBackToList,\n          className: \"px-4 py-2 mb-4 text-sm font-semibold text-gray-200 bg-gray-700 rounded-full shadow-md hover:bg-gray-600 transition-colors duration-200\",\n          children: \"\\u2190 Back to Recipes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-bold text-center text-blue-300\",\n          children: selectedRecipe.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center my-4\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedRecipe.image,\n            alt: selectedRecipe.title,\n            className: \"w-full max-w-md h-auto object-cover rounded-xl shadow-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-700 p-6 rounded-2xl my-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-bold text-purple-300 mb-4\",\n            children: \"Nutrition (Approximate per serving):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 sm:grid-cols-4 gap-4 text-center\",\n            children: ['calories', 'protein', 'carbohydrates', 'fat'].map((nutrient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-600 p-4 rounded-xl shadow-inner\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"block text-xl font-bold text-gray-100\",\n                children: selectedRecipe.nutrients[nutrient] || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"block text-gray-400 capitalize\",\n                children: nutrient\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-700 p-6 rounded-2xl my-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-bold text-purple-300 mb-4\",\n            children: \"Ingredients:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-disc list-inside space-y-2 text-gray-300\",\n            children: (_selectedRecipe$ingre = selectedRecipe.ingredients) === null || _selectedRecipe$ingre === void 0 ? void 0 : _selectedRecipe$ingre.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"pl-2\",\n              children: ingredient\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-700 p-6 rounded-2xl my-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-bold text-purple-300 mb-4\",\n            children: \"Instructions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-300 leading-relaxed whitespace-pre-wrap\",\n            children: selectedRecipe.instructions || 'Instructions not available.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // Display initial and recipe list view\n      _jsxDEV(\"div\", {\n        className: \"flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col sm:flex-row items-center justify-center space-y-4 sm:space-y-0 sm:space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: handleImageChange,\n              accept: \"image/*\",\n              className: \"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: processImage,\n              disabled: !image || status.includes('...') || status === 'Error.',\n              className: \"w-full sm:w-auto px-6 py-2 rounded-full text-white font-bold transition-transform transform hover:scale-105 active:scale-95 duration-200\\r disabled:opacity-50 disabled:cursor-not-allowed bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 shadow-lg\",\n              children: status.includes('...') ? 'Processing...' : 'Find Recipes'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this), showStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `mt-4 text-sm font-semibold text-center ${errorMessage ? 'text-red-400' : 'text-gray-400'}`,\n          children: errorMessage || status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 15\n        }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6 p-4 bg-gray-700 rounded-xl shadow-inner w-full flex flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-gray-300\",\n            children: \"Extracted Ingredients:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"text-gray-400 whitespace-pre-wrap text-sm\",\n            children: extractedText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 15\n        }, this), recipes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipes-container mt-8 w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-2xl font-bold text-center text-purple-300 mb-4\",\n            children: \"Suggested Recipes \\uD83D\\uDC47\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-grid grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\",\n            children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-card bg-gray-700 p-4 rounded-2xl shadow-lg cursor-pointer transform hover:scale-105 transition-transform duration-200\",\n              onClick: () => fetchRecipeDetails(recipe),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: recipe.image,\n                alt: recipe.title,\n                className: \"w-full h-40 object-cover rounded-xl mb-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-lg font-semibold text-center text-gray-100\",\n                children: recipe.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 23\n              }, this)]\n            }, recipe.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 15\n        }, this), status === 'Complete!' && recipes.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4 text-gray-400 text-center\",\n          children: \"No recipes found. Try a different image or more common ingredients!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"mruHuvRvQseK9YReFCysI6lBQvM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","_selectedRecipe$ingre","image","setImage","extractedText","setExtractedText","status","setStatus","recipes","setRecipes","selectedRecipe","setSelectedRecipe","errorMessage","setErrorMessage","showStatus","setShowStatus","API_KEY","OCR_MODEL","RECIPE_GENERATION_MODEL","BASE_API_URL","fetchWithBackoff","url","options","retries","i","response","fetch","ok","delay","Math","pow","random","console","warn","Promise","res","setTimeout","Error","error","handleImageChange","event","target","files","file","processImage","reader","FileReader","readAsDataURL","onload","base64Data","result","split","_ocrData$candidates","_ocrData$candidates$","_ocrData$candidates$$","_ocrData$candidates$$2","_ocrData$candidates$$3","_recipeData$candidate","_recipeData$candidate2","_recipeData$candidate3","_recipeData$candidate4","_recipeData$candidate5","ocrPayload","contents","parts","text","inlineData","mimeType","type","data","ocrUrl","ocrResponse","method","headers","body","JSON","stringify","ocrData","json","textFromImage","candidates","content","recipePrompt","recipePayload","generationConfig","responseMimeType","responseSchema","items","properties","recipeUrl","recipeResponse","recipeData","recipesJson","parse","fetchRecipeDetails","recipe","_detailsData$candidat","_detailsData$candidat2","_detailsData$candidat3","_detailsData$candidat4","_detailsData$candidat5","detailsPrompt","title","detailsPayload","detailsUrl","detailsResponse","detailsData","detailsJson","goBackToList","copyExtractedText","navigator","clipboard","writeText","then","catch","err","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","onClick","alt","map","nutrient","index","nutrients","ingredients","ingredient","instructions","onChange","accept","disabled","includes","length","id","_c","$RefreshReg$"],"sources":["C:/Users/bivin/Favorites/Desktop/sem7/fsd/ocr-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n// Main App component for the recipe suggester\r\nconst App = () => {\r\n  // State variables to manage the app's UI and data\r\n  const [image, setImage] = useState(null); // Stores the selected image file\r\n  const [extractedText, setExtractedText] = useState(''); // Stores text extracted from the image\r\n  const [status, setStatus] = useState('Select an image to get started.'); // Displays current status to the user\r\n  const [recipes, setRecipes] = useState([]); // Stores the list of suggested recipes\r\n  const [selectedRecipe, setSelectedRecipe] = useState(null); // Stores details for a single selected recipe\r\n  const [errorMessage, setErrorMessage] = useState(''); // Stores any error messages to display\r\n  const [showStatus, setShowStatus] = useState(true); // Controls visibility of the status message\r\n\r\n  // Gemini API configuration\r\n  const API_KEY = \"\"; // Do not change this, Canvas will provide the key at runtime\r\n  const OCR_MODEL = \"gemini-2.5-flash-preview-05-20\";\r\n  const RECIPE_GENERATION_MODEL = \"gemini-2.5-flash-preview-05-20\";\r\n  const BASE_API_URL = \"https://generativelanguage.googleapis.com/v1beta/models/\";\r\n\r\n  /**\r\n   * Helper function to handle fetch requests with exponential backoff for retries.\r\n   * This improves robustness against temporary network issues or rate limits.\r\n   * @param {string} url - The URL to fetch from.\r\n   * @param {object} options - Fetch options (method, headers, body, etc.).\r\n   * @param {number} retries - Number of retry attempts.\r\n   */\r\n  const fetchWithBackoff = async (url, options, retries = 3) => {\r\n    for (let i = 0; i < retries; i++) {\r\n      try {\r\n        const response = await fetch(url, options);\r\n        if (response.ok) {\r\n          return response;\r\n        } else if (response.status === 429) {\r\n          const delay = Math.pow(2, i) * 1000 + Math.random() * 1000;\r\n          console.warn(`Rate limit hit. Retrying in ${delay}ms...`);\r\n          await new Promise(res => setTimeout(res, delay));\r\n          continue;\r\n        } else {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n      } catch (error) {\r\n        if (i === retries - 1) throw error;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles the file input change event.\r\n   * Resets the app state and displays a preview of the selected image.\r\n   * @param {object} event - The file input change event.\r\n   */\r\n  const handleImageChange = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const file = event.target.files[0];\r\n      setImage(file);\r\n      setExtractedText('');\r\n      setRecipes([]);\r\n      setSelectedRecipe(null);\r\n      setErrorMessage('');\r\n      setShowStatus(true);\r\n      setStatus('Image selected. Click \"Find Recipes\" to analyze.');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Processes the selected image to extract text and then find recipes.\r\n   * This is the main logic function for the application.\r\n   */\r\n  const processImage = async () => {\r\n    setErrorMessage('');\r\n    if (!image) {\r\n      setErrorMessage('Please select an image first.');\r\n      return;\r\n    }\r\n\r\n    setRecipes([]);\r\n    setSelectedRecipe(null);\r\n    setStatus('Analyzing image for ingredients...');\r\n\r\n    // Convert the image file to a Base64 string for the API\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(image);\r\n    reader.onload = async () => {\r\n      const base64Data = reader.result.split(',')[1];\r\n      try {\r\n        // Step 1: Use Gemini API to perform OCR (image to text)\r\n        const ocrPayload = {\r\n          contents: [{\r\n            parts: [\r\n              { text: \"Describe the text content and objects in this image. Focus on listing any ingredients, food items, or cooking materials.\" },\r\n              { inlineData: { mimeType: image.type, data: base64Data } }\r\n            ]\r\n          }]\r\n        };\r\n\r\n        const ocrUrl = `${BASE_API_URL}${OCR_MODEL}:generateContent?key=${API_KEY}`;\r\n        const ocrResponse = await fetchWithBackoff(ocrUrl, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(ocrPayload)\r\n        });\r\n        const ocrData = await ocrResponse.json();\r\n        const textFromImage = ocrData?.candidates?.[0]?.content?.parts?.[0]?.text || '';\r\n        setExtractedText(textFromImage);\r\n\r\n        if (!textFromImage) {\r\n          setStatus('No recognizable text or ingredients found. Please try a different image.');\r\n          setShowStatus(true);\r\n          return;\r\n        }\r\n\r\n        // Step 2: Use Gemini API to get a structured list of recipes\r\n        setStatus('Generating recipes based on ingredients...');\r\n        const recipePrompt = `Given the following text, provide a list of 5 recipes. The recipes should be simple and use as many of the listed ingredients as possible.\r\n        \r\n        Text: \"${textFromImage}\"\r\n        \r\n        Provide the response as a JSON array of objects. Each object should have an \"id\" (a unique number), \"title\" (the recipe name), and \"image\" (a placeholder image URL using https://placehold.co/ and the recipe title). Do not include any other text or markdown.`;\r\n\r\n        const recipePayload = {\r\n          contents: [{ parts: [{ text: recipePrompt }] }],\r\n          generationConfig: {\r\n            responseMimeType: \"application/json\",\r\n            responseSchema: {\r\n              type: \"ARRAY\",\r\n              items: {\r\n                type: \"OBJECT\",\r\n                properties: {\r\n                  \"id\": { \"type\": \"NUMBER\" },\r\n                  \"title\": { \"type\": \"STRING\" },\r\n                  \"image\": { \"type\": \"STRING\" },\r\n                }\r\n              }\r\n            }\r\n          }\r\n        };\r\n\r\n        const recipeUrl = `${BASE_API_URL}${RECIPE_GENERATION_MODEL}:generateContent?key=${API_KEY}`;\r\n        const recipeResponse = await fetchWithBackoff(recipeUrl, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(recipePayload)\r\n        });\r\n        const recipeData = await recipeResponse.json();\r\n        const recipesJson = JSON.parse(recipeData?.candidates?.[0]?.content?.parts?.[0]?.text || \"[]\");\r\n        setRecipes(recipesJson);\r\n        setStatus('Recipes generated successfully!');\r\n        setShowStatus(false);\r\n\r\n      } catch (error) {\r\n        console.error('API Error:', error);\r\n        setErrorMessage('An error occurred while processing your request. Please try again.');\r\n        setStatus('Error.');\r\n        setShowStatus(true);\r\n      }\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Fetches and displays detailed information for a single recipe.\r\n   * @param {object} recipe - The recipe object from the list.\r\n   */\r\n  const fetchRecipeDetails = async (recipe) => {\r\n    setErrorMessage('');\r\n    setStatus('Fetching recipe details...');\r\n    setShowStatus(true);\r\n    try {\r\n      const detailsPrompt = `Provide a detailed recipe for \"${recipe.title}\". Include the following information in a JSON object:\r\n      - \"id\": The same ID as the input recipe.\r\n      - \"title\": The recipe title.\r\n      - \"image\": The same image URL.\r\n      - \"nutrients\": An object with \"calories\", \"protein\", \"carbohydrates\", and \"fat\" (provide approximate values).\r\n      - \"ingredients\": An array of strings with ingredient names and quantities.\r\n      - \"instructions\": A detailed, step-by-step string of instructions.\r\n      \r\n      Do not include any other text or markdown outside the JSON object.`;\r\n\r\n      const detailsPayload = {\r\n        contents: [{ parts: [{ text: detailsPrompt }] }],\r\n        generationConfig: {\r\n          responseMimeType: \"application/json\",\r\n          responseSchema: {\r\n            type: \"OBJECT\",\r\n            properties: {\r\n              \"id\": { \"type\": \"NUMBER\" },\r\n              \"title\": { \"type\": \"STRING\" },\r\n              \"image\": { \"type\": \"STRING\" },\r\n              \"nutrients\": {\r\n                \"type\": \"OBJECT\",\r\n                \"properties\": {\r\n                  \"calories\": { \"type\": \"NUMBER\" },\r\n                  \"protein\": { \"type\": \"NUMBER\" },\r\n                  \"carbohydrates\": { \"type\": \"NUMBER\" },\r\n                  \"fat\": { \"type\": \"NUMBER\" }\r\n                }\r\n              },\r\n              \"ingredients\": {\r\n                \"type\": \"ARRAY\",\r\n                \"items\": { \"type\": \"STRING\" }\r\n              },\r\n              \"instructions\": { \"type\": \"STRING\" }\r\n            }\r\n          }\r\n        }\r\n      };\r\n\r\n      const detailsUrl = `${BASE_API_URL}${RECIPE_GENERATION_MODEL}:generateContent?key=${API_KEY}`;\r\n      const detailsResponse = await fetchWithBackoff(detailsUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(detailsPayload)\r\n      });\r\n      const detailsData = await detailsResponse.json();\r\n      const detailsJson = JSON.parse(detailsData?.candidates?.[0]?.content?.parts?.[0]?.text || \"{}\");\r\n      setSelectedRecipe(detailsJson);\r\n      setStatus('Details loaded!');\r\n      setShowStatus(false);\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      setErrorMessage('Failed to load recipe details. Please try again.');\r\n      setStatus('Error fetching details.');\r\n      setShowStatus(true);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Resets the view back to the recipe list from the detailed view.\r\n   */\r\n  const goBackToList = () => {\r\n    setSelectedRecipe(null);\r\n    setStatus('Ready to explore more recipes.');\r\n    setShowStatus(false);\r\n  };\r\n\r\n  /**\r\n   * Copies the extracted text to the clipboard.\r\n   */\r\n  const copyExtractedText = () => {\r\n    if (extractedText) {\r\n      navigator.clipboard.writeText(extractedText)\r\n        .then(() => {\r\n          setStatus('Extracted text copied!');\r\n          setShowStatus(true);\r\n        })\r\n        .catch(err => {\r\n          console.error('Failed to copy text:', err);\r\n          setErrorMessage('Could not copy text to clipboard.');\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-900 min-h-screen text-white font-sans flex flex-col items-center p-4 sm:p-8\">\r\n      <script src=\"https://cdn.tailwindcss.com\"></script>\r\n      <header className=\"w-full max-w-4xl text-center mb-8\">\r\n        <h1 className=\"text-4xl sm:text-5xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-purple-500 rounded-lg\">\r\n          OCR & Recipe Suggester\r\n        </h1>\r\n        <p className=\"mt-2 text-gray-300 text-lg\">\r\n          Snap a pic of your ingredients and find out what to cook!\r\n        </p>\r\n      </header>\r\n\r\n      {/* Main content area */}\r\n      <main className=\"w-full max-w-4xl bg-gray-800 p-6 rounded-3xl shadow-lg border border-gray-700\">\r\n        {selectedRecipe ? (\r\n          // Display detailed recipe view\r\n          <div className=\"animate-fade-in-up\">\r\n            <button\r\n              onClick={goBackToList}\r\n              className=\"px-4 py-2 mb-4 text-sm font-semibold text-gray-200 bg-gray-700 rounded-full shadow-md hover:bg-gray-600 transition-colors duration-200\"\r\n            >\r\n              ← Back to Recipes\r\n            </button>\r\n            <h2 className=\"text-3xl font-bold text-center text-blue-300\">{selectedRecipe.title}</h2>\r\n            <div className=\"flex justify-center my-4\">\r\n              <img\r\n                src={selectedRecipe.image}\r\n                alt={selectedRecipe.title}\r\n                className=\"w-full max-w-md h-auto object-cover rounded-xl shadow-lg\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"bg-gray-700 p-6 rounded-2xl my-6\">\r\n              <h3 className=\"text-xl font-bold text-purple-300 mb-4\">Nutrition (Approximate per serving):</h3>\r\n              <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-4 text-center\">\r\n                {['calories', 'protein', 'carbohydrates', 'fat'].map((nutrient, index) => (\r\n                  <div key={index} className=\"bg-gray-600 p-4 rounded-xl shadow-inner\">\r\n                    <span className=\"block text-xl font-bold text-gray-100\">{selectedRecipe.nutrients[nutrient] || 'N/A'}</span>\r\n                    <span className=\"block text-gray-400 capitalize\">{nutrient}</span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-gray-700 p-6 rounded-2xl my-6\">\r\n              <h3 className=\"text-xl font-bold text-purple-300 mb-4\">Ingredients:</h3>\r\n              <ul className=\"list-disc list-inside space-y-2 text-gray-300\">\r\n                {selectedRecipe.ingredients?.map((ingredient, index) => (\r\n                  <li key={index} className=\"pl-2\">{ingredient}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n\r\n            <div className=\"bg-gray-700 p-6 rounded-2xl my-6\">\r\n              <h3 className=\"text-xl font-bold text-purple-300 mb-4\">Instructions:</h3>\r\n              <p className=\"text-gray-300 leading-relaxed whitespace-pre-wrap\">\r\n                {selectedRecipe.instructions || 'Instructions not available.'}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          // Display initial and recipe list view\r\n          <div className=\"flex flex-col items-center\">\r\n            <div className=\"w-full text-center\">\r\n              <div className=\"flex flex-col sm:flex-row items-center justify-center space-y-4 sm:space-y-0 sm:space-x-4\">\r\n                <input\r\n                  type=\"file\"\r\n                  onChange={handleImageChange}\r\n                  accept=\"image/*\"\r\n                  className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"\r\n                />\r\n                <button\r\n                  onClick={processImage}\r\n                  disabled={!image || status.includes('...') || status === 'Error.'}\r\n                  className=\"w-full sm:w-auto px-6 py-2 rounded-full text-white font-bold transition-transform transform hover:scale-105 active:scale-95 duration-200\r\n                             disabled:opacity-50 disabled:cursor-not-allowed bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 shadow-lg\"\r\n                >\r\n                  {status.includes('...') ? 'Processing...' : 'Find Recipes'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            {showStatus && (\r\n              <p className={`mt-4 text-sm font-semibold text-center ${errorMessage ? 'text-red-400' : 'text-gray-400'}`}>\r\n                {errorMessage || status}\r\n              </p>\r\n            )}\r\n\r\n            {image && (\r\n              <div className=\"mt-6 p-4 bg-gray-700 rounded-xl shadow-inner w-full flex flex-col items-center\">\r\n                <h3 className=\"text-lg font-semibold text-gray-300\">\r\n                  Extracted Ingredients:\r\n                </h3>\r\n                <pre className=\"text-gray-400 whitespace-pre-wrap text-sm\">{extractedText}</pre>\r\n              </div>\r\n            )}\r\n    \r\n            {recipes.length > 0 && (\r\n              <div className=\"recipes-container mt-8 w-full\">\r\n                <h3 className=\"text-2xl font-bold text-center text-purple-300 mb-4\">\r\n                  Suggested Recipes 👇\r\n                </h3>\r\n                <div className=\"recipe-grid grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                  {recipes.map((recipe) => (\r\n                    <div \r\n                      key={recipe.id}\r\n                      className=\"recipe-card bg-gray-700 p-4 rounded-2xl shadow-lg cursor-pointer transform hover:scale-105 transition-transform duration-200\" \r\n                      onClick={() => fetchRecipeDetails(recipe)}\r\n                    >\r\n                      <img src={recipe.image} alt={recipe.title} className=\"w-full h-40 object-cover rounded-xl mb-3\" />\r\n                      <h4 className=\"text-lg font-semibold text-center text-gray-100\">{recipe.title}</h4>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n            {status === 'Complete!' && recipes.length === 0 && (\r\n              <p className=\"mt-4 text-gray-400 text-center\">\r\n                No recipes found. Try a different image or more common ingredients!\r\n              </p>\r\n            )}\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}