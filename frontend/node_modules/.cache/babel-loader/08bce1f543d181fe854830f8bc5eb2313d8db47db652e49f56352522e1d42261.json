{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bivin\\\\Favorites\\\\Desktop\\\\sem7\\\\fsd\\\\ocr-app\\\\frontend\\\\src\\\\CameraCapture.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/CameraCapture.js\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CameraCapture() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [extractedText, setExtractedText] = useState('');\n  const startCamera = () => {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      videoRef.current.srcObject = stream;\n      videoRef.current.play();\n    });\n  };\n  const captureImage = () => {\n    const context = canvasRef.current.getContext('2d');\n    context.drawImage(videoRef.current, 0, 0, 640, 480);\n    canvasRef.current.toBlob(blob => {\n      const formData = new FormData();\n      formData.append('image', blob, 'capture.png');\n      fetch('http://localhost:5000/upload', {\n        method: 'POST',\n        body: formData\n      }).then(res => res.json()).then(data => setExtractedText(data.text)).catch(err => console.error(err));\n    }, 'image/png');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Camera OCR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startCamera,\n      children: \"Start Camera\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      width: \"640\",\n      height: \"480\",\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: captureImage,\n      children: \"Capture & Extract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: \"640\",\n      height: \"480\",\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Extracted Text:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: extractedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(CameraCapture, \"PeZs/vLhyuh3Neh27fbpYpYrkKI=\");\n_c = CameraCapture;\nexport default CameraCapture;\nvar _c;\n$RefreshReg$(_c, \"CameraCapture\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","CameraCapture","_s","videoRef","canvasRef","extractedText","setExtractedText","startCamera","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","play","captureImage","context","getContext","drawImage","toBlob","blob","formData","FormData","append","fetch","method","body","res","json","data","text","catch","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","width","height","autoPlay","style","display","_c","$RefreshReg$"],"sources":["C:/Users/bivin/Favorites/Desktop/sem7/fsd/ocr-app/frontend/src/CameraCapture.js"],"sourcesContent":["// frontend/src/components/CameraCapture.js\r\nimport React, { useRef, useState } from 'react';\r\n\r\nfunction CameraCapture() {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [extractedText, setExtractedText] = useState('');\r\n\r\n  const startCamera = () => {\r\n    navigator.mediaDevices.getUserMedia({ video: true }).then((stream) => {\r\n      videoRef.current.srcObject = stream;\r\n      videoRef.current.play();\r\n    });\r\n  };\r\n\r\n  const captureImage = () => {\r\n    const context = canvasRef.current.getContext('2d');\r\n    context.drawImage(videoRef.current, 0, 0, 640, 480);\r\n\r\n    canvasRef.current.toBlob((blob) => {\r\n      const formData = new FormData();\r\n      formData.append('image', blob, 'capture.png');\r\n\r\n      fetch('http://localhost:5000/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => setExtractedText(data.text))\r\n        .catch((err) => console.error(err));\r\n    }, 'image/png');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Camera OCR</h2>\r\n      <button onClick={startCamera}>Start Camera</button>\r\n      <br />\r\n      <video ref={videoRef} width=\"640\" height=\"480\" autoPlay />\r\n      <br />\r\n      <button onClick={captureImage}>Capture & Extract</button>\r\n      <canvas ref={canvasRef} width=\"640\" height=\"480\" style={{ display: 'none' }}></canvas>\r\n      <h3>Extracted Text:</h3>\r\n      <p>{extractedText}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CameraCapture;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMO,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAK;MACpEV,QAAQ,CAACW,OAAO,CAACC,SAAS,GAAGF,MAAM;MACnCV,QAAQ,CAACW,OAAO,CAACE,IAAI,CAAC,CAAC;IACzB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,OAAO,GAAGd,SAAS,CAACU,OAAO,CAACK,UAAU,CAAC,IAAI,CAAC;IAClDD,OAAO,CAACE,SAAS,CAACjB,QAAQ,CAACW,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;IAEnDV,SAAS,CAACU,OAAO,CAACO,MAAM,CAAEC,IAAI,IAAK;MACjC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,IAAI,EAAE,aAAa,CAAC;MAE7CI,KAAK,CAAC,8BAA8B,EAAE;QACpCC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEL;MACR,CAAC,CAAC,CACCX,IAAI,CAAEiB,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBlB,IAAI,CAAEmB,IAAI,IAAKzB,gBAAgB,CAACyB,IAAI,CAACC,IAAI,CAAC,CAAC,CAC3CC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;IACvC,CAAC,EAAE,WAAW,CAAC;EACjB,CAAC;EAED,oBACElC,OAAA;IAAAqC,QAAA,gBACErC,OAAA;MAAAqC,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBzC,OAAA;MAAQ0C,OAAO,EAAEnC,WAAY;MAAA8B,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnDzC,OAAA;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNzC,OAAA;MAAO2C,GAAG,EAAExC,QAAS;MAACyC,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC,KAAK;MAACC,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1DzC,OAAA;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNzC,OAAA;MAAQ0C,OAAO,EAAEzB,YAAa;MAAAoB,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzDzC,OAAA;MAAQ2C,GAAG,EAAEvC,SAAU;MAACwC,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC,KAAK;MAACE,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACtFzC,OAAA;MAAAqC,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBzC,OAAA;MAAAqC,QAAA,EAAIhC;IAAa;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV;AAACvC,EAAA,CA3CQD,aAAa;AAAAgD,EAAA,GAAbhD,aAAa;AA6CtB,eAAeA,aAAa;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}