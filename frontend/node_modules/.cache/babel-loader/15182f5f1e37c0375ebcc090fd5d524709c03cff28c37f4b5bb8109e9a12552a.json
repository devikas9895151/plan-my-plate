{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bivin\\\\Favorites\\\\Desktop\\\\sem7\\\\fsd\\\\ocr-app\\\\frontend\\\\src\\\\components\\\\CameraCapture.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/CameraCapture.js\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraCapture = ({\n  onTextExtracted\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  const [isCameraOn, setIsCameraOn] = useState(false);\n  useEffect(() => {\n    if (isCameraOn) {\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(stream => {\n        videoRef.current.srcObject = stream;\n        videoRef.current.play();\n      }).catch(err => {\n        console.error(\"Error accessing camera: \", err);\n      });\n    }\n  }, [isCameraOn]);\n  const captureImage = () => {\n    const canvas = document.createElement('canvas');\n    const video = videoRef.current;\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    canvas.getContext('2d').drawImage(video, 0, 0);\n    canvas.toBlob(blob => {\n      const formData = new FormData();\n      formData.append('image', blob, 'capture.jpg');\n      axios.post('http://localhost:5000/extract', formData).then(response => {\n        console.log(\"Extracted Text:\", response.data.text);\n        if (onTextExtracted) onTextExtracted(response.data.text);\n      }).catch(error => {\n        console.error('Error uploading captured image:', error);\n      });\n    }, 'image/jpeg');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Camera Capture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      width: \"400\",\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsCameraOn(true),\n        children: \"Start Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: captureImage,\n        children: \"Capture & Extract Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(CameraCapture, \"bEDteTzLXDH+ZsEJyO11P9K1ToM=\");\n_c = CameraCapture;\nexport default CameraCapture;\nvar _c;\n$RefreshReg$(_c, \"CameraCapture\");","map":{"version":3,"names":["React","useRef","useEffect","useState","axios","jsxDEV","_jsxDEV","CameraCapture","onTextExtracted","_s","videoRef","isCameraOn","setIsCameraOn","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","play","catch","err","console","error","captureImage","canvas","document","createElement","width","videoWidth","height","videoHeight","getContext","drawImage","toBlob","blob","formData","FormData","append","post","response","log","data","text","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","style","marginTop","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bivin/Favorites/Desktop/sem7/fsd/ocr-app/frontend/src/components/CameraCapture.js"],"sourcesContent":["// frontend/src/components/CameraCapture.js\r\n\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CameraCapture = ({ onTextExtracted }) => {\r\n  const videoRef = useRef(null);\r\n  const [isCameraOn, setIsCameraOn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isCameraOn) {\r\n      navigator.mediaDevices.getUserMedia({ video: true })\r\n        .then(stream => {\r\n          videoRef.current.srcObject = stream;\r\n          videoRef.current.play();\r\n        })\r\n        .catch(err => {\r\n          console.error(\"Error accessing camera: \", err);\r\n        });\r\n    }\r\n  }, [isCameraOn]);\r\n\r\n  const captureImage = () => {\r\n    const canvas = document.createElement('canvas');\r\n    const video = videoRef.current;\r\n\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n    canvas.getContext('2d').drawImage(video, 0, 0);\r\n\r\n    canvas.toBlob((blob) => {\r\n      const formData = new FormData();\r\n      formData.append('image', blob, 'capture.jpg');\r\n\r\n      axios.post('http://localhost:5000/extract', formData)\r\n        .then(response => {\r\n          console.log(\"Extracted Text:\", response.data.text);\r\n          if (onTextExtracted) onTextExtracted(response.data.text);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error uploading captured image:', error);\r\n        });\r\n    }, 'image/jpeg');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Camera Capture</h3>\r\n      <video ref={videoRef} width=\"400\" autoPlay />\r\n      <div style={{ marginTop: \"10px\" }}>\r\n        <button onClick={() => setIsCameraOn(true)}>Start Camera</button>\r\n        <button onClick={captureImage}>Capture & Extract Text</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CameraCapture;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}