{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bivin\\\\Favorites\\\\Desktop\\\\sem7\\\\fsd\\\\ocr-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport Webcam from 'react-webcam';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [text, setText] = useState('');\n  const webcamRef = useRef(null);\n  const handleFileChange = e => {\n    setImage(e.target.files[0]);\n  };\n  const captureImage = () => {\n    const screenshot = webcamRef.current.getScreenshot();\n    if (screenshot) {\n      const byteString = atob(screenshot.split(',')[1]);\n      const mimeString = screenshot.split(',')[0].split(':')[1].split(';')[0];\n      const ab = new ArrayBuffer(byteString.length);\n      const ia = new Uint8Array(ab);\n      for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n      }\n      const blob = new Blob([ab], {\n        type: mimeString\n      });\n      const file = new File([blob], 'captured.png', {\n        type: mimeString\n      });\n      setImage(file);\n    }\n  };\n  const handleUpload = async () => {\n    if (!image) return alert('No image selected or captured.');\n    const formData = new FormData();\n    formData.append('image', image);\n    try {\n      const response = await axios.post('http://localhost:5000/extract', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setText(response.data.text);\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Failed to extract text.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"OCR Image Upload with Camera\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: webcamRef,\n        screenshotFormat: \"image/png\",\n        width: 300,\n        videoConstraints: {\n          facingMode: 'environment' // use \"user\" for front cam\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: captureImage,\n        style: {\n          marginTop: '1rem'\n        },\n        children: \"Capture Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        style: {\n          marginLeft: '1rem'\n        },\n        children: \"Upload and Extract Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        marginTop: '2rem',\n        background: '#f0f0f0',\n        padding: '1rem'\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vFz7OR989hVGQk0iMsk6vZVJKD4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","axios","Webcam","jsxDEV","_jsxDEV","App","_s","image","setImage","text","setText","webcamRef","handleFileChange","e","target","files","captureImage","screenshot","current","getScreenshot","byteString","atob","split","mimeString","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","blob","Blob","type","file","File","handleUpload","alert","formData","FormData","append","response","post","headers","data","error","console","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","audio","ref","screenshotFormat","width","videoConstraints","facingMode","onClick","marginTop","accept","onChange","marginLeft","background","_c","$RefreshReg$"],"sources":["C:/Users/bivin/Favorites/Desktop/sem7/fsd/ocr-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport Webcam from 'react-webcam';\r\n\r\nfunction App() {\r\n  const [image, setImage] = useState(null);\r\n  const [text, setText] = useState('');\r\n  const webcamRef = useRef(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    setImage(e.target.files[0]);\r\n  };\r\n\r\n  const captureImage = () => {\r\n    const screenshot = webcamRef.current.getScreenshot();\r\n    if (screenshot) {\r\n      const byteString = atob(screenshot.split(',')[1]);\r\n      const mimeString = screenshot.split(',')[0].split(':')[1].split(';')[0];\r\n      const ab = new ArrayBuffer(byteString.length);\r\n      const ia = new Uint8Array(ab);\r\n      for (let i = 0; i < byteString.length; i++) {\r\n        ia[i] = byteString.charCodeAt(i);\r\n      }\r\n      const blob = new Blob([ab], { type: mimeString });\r\n      const file = new File([blob], 'captured.png', { type: mimeString });\r\n      setImage(file);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!image) return alert('No image selected or captured.');\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', image);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/extract', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      });\r\n      setText(response.data.text);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert('Failed to extract text.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '2rem' }}>\r\n      <h1>OCR Image Upload with Camera</h1>\r\n\r\n      <div style={{ marginBottom: '1rem' }}>\r\n        <Webcam\r\n          audio={false}\r\n          ref={webcamRef}\r\n          screenshotFormat=\"image/png\"\r\n          width={300}\r\n          videoConstraints={{\r\n            facingMode: 'environment', // use \"user\" for front cam\r\n          }}\r\n        />\r\n        <br />\r\n        <button onClick={captureImage} style={{ marginTop: '1rem' }}>\r\n          Capture Image\r\n        </button>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: '1rem' }}>\r\n        <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n        <button onClick={handleUpload} style={{ marginLeft: '1rem' }}>\r\n          Upload and Extract Text\r\n        </button>\r\n      </div>\r\n\r\n      <pre style={{ marginTop: '2rem', background: '#f0f0f0', padding: '1rem' }}>\r\n        {text}\r\n      </pre>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}