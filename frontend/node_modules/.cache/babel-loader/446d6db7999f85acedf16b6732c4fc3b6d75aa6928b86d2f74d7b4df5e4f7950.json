{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bivin\\\\Favorites\\\\Desktop\\\\sem7\\\\fsd\\\\ocr-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [text, setText] = useState('');\n  const [recipes, setRecipes] = useState([]);\n  const handleFileChange = e => {\n    setImage(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('image', image);\n    try {\n      const response = await axios.post('http://localhost:5000/extract', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      const extractedText = response.data.text;\n      setText(extractedText);\n      suggestRecipes(extractedText); // ✅ Call recipe suggester\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Failed to extract text.');\n    }\n  };\n  const suggestRecipes = text => {\n    const ingredients = text.toLowerCase().split(/[\\s,.\\n-]+/);\n    const uniqueIngredients = new Set(ingredients);\n    const possibleRecipes = [{\n      name: \"Egg Sandwich\",\n      items: [\"egg\", \"bread\"],\n      meal: \"Breakfast\"\n    }, {\n      name: \"Tomato Toast\",\n      items: [\"bread\", \"tomato\"],\n      meal: \"Breakfast\"\n    }, {\n      name: \"Vegetable Rice\",\n      items: [\"rice\", \"potato\", \"tomato\"],\n      meal: \"Lunch\"\n    }, {\n      name: \"Egg Fried Rice\",\n      items: [\"rice\", \"egg\", \"tomato\"],\n      meal: \"Lunch\"\n    }, {\n      name: \"Tomato Potato Curry\",\n      items: [\"tomato\", \"potato\"],\n      meal: \"Dinner\"\n    }, {\n      name: \"Bread & Scrambled Eggs\",\n      items: [\"bread\", \"egg\"],\n      meal: \"Dinner\"\n    }];\n    const matched = possibleRecipes.filter(recipe => recipe.items.every(item => uniqueIngredients.has(item)));\n    setRecipes(matched);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"OCR Image Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      style: {\n        marginLeft: '1rem'\n      },\n      children: \"Upload and Extract Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        marginTop: '2rem',\n        background: '#f0f0f0',\n        padding: '1rem'\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), recipes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Suggested Recipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: recipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: recipe.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), \" - \", recipe.meal]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"z26dfVhCWPMTYdpOPmFrnlTNg9o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","image","setImage","text","setText","recipes","setRecipes","handleFileChange","e","target","files","handleUpload","formData","FormData","append","response","post","headers","extractedText","data","suggestRecipes","error","console","alert","ingredients","toLowerCase","split","uniqueIngredients","Set","possibleRecipes","name","items","meal","matched","filter","recipe","every","item","has","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","marginLeft","marginTop","background","length","map","index","_c","$RefreshReg$"],"sources":["C:/Users/bivin/Favorites/Desktop/sem7/fsd/ocr-app/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [image, setImage] = useState(null);\r\n  const [text, setText] = useState('');\r\n  const [recipes, setRecipes] = useState([]);\r\n\r\n  const handleFileChange = (e) => {\r\n    setImage(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n    formData.append('image', image);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/extract', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      });\r\n\r\n      const extractedText = response.data.text;\r\n      setText(extractedText);\r\n      suggestRecipes(extractedText); // ✅ Call recipe suggester\r\n\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert('Failed to extract text.');\r\n    }\r\n  };\r\n\r\n  const suggestRecipes = (text) => {\r\n    const ingredients = text.toLowerCase().split(/[\\s,.\\n-]+/);\r\n    const uniqueIngredients = new Set(ingredients);\r\n\r\n    const possibleRecipes = [\r\n      {\r\n        name: \"Egg Sandwich\",\r\n        items: [\"egg\", \"bread\"],\r\n        meal: \"Breakfast\"\r\n      },\r\n      {\r\n        name: \"Tomato Toast\",\r\n        items: [\"bread\", \"tomato\"],\r\n        meal: \"Breakfast\"\r\n      },\r\n      {\r\n        name: \"Vegetable Rice\",\r\n        items: [\"rice\", \"potato\", \"tomato\"],\r\n        meal: \"Lunch\"\r\n      },\r\n      {\r\n        name: \"Egg Fried Rice\",\r\n        items: [\"rice\", \"egg\", \"tomato\"],\r\n        meal: \"Lunch\"\r\n      },\r\n      {\r\n        name: \"Tomato Potato Curry\",\r\n        items: [\"tomato\", \"potato\"],\r\n        meal: \"Dinner\"\r\n      },\r\n      {\r\n        name: \"Bread & Scrambled Eggs\",\r\n        items: [\"bread\", \"egg\"],\r\n        meal: \"Dinner\"\r\n      }\r\n    ];\r\n\r\n    const matched = possibleRecipes.filter(recipe =>\r\n      recipe.items.every(item => uniqueIngredients.has(item))\r\n    );\r\n\r\n    setRecipes(matched);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '2rem' }}>\r\n      <h2>OCR Image Upload</h2>\r\n      <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload} style={{ marginLeft: '1rem' }}>Upload and Extract Text</button>\r\n\r\n      <pre style={{ marginTop: '2rem', background: '#f0f0f0', padding: '1rem' }}>{text}</pre>\r\n\r\n      {recipes.length > 0 && (\r\n        <div style={{ marginTop: '2rem' }}>\r\n          <h3>Suggested Recipes</h3>\r\n          <ul>\r\n            {recipes.map((recipe, index) => (\r\n              <li key={index}>\r\n                <strong>{recipe.name}</strong> - {recipe.meal}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,gBAAgB,GAAIC,CAAC,IAAK;IAC9BN,QAAQ,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEb,KAAK,CAAC;IAE/B,IAAI;MACF,MAAMc,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,+BAA+B,EAAEJ,QAAQ,EAAE;QAC3EK,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACnD,CAAC,CAAC;MAEF,MAAMC,aAAa,GAAGH,QAAQ,CAACI,IAAI,CAAChB,IAAI;MACxCC,OAAO,CAACc,aAAa,CAAC;MACtBE,cAAc,CAACF,aAAa,CAAC,CAAC,CAAC;IAEjC,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BE,KAAK,CAAC,yBAAyB,CAAC;IAClC;EACF,CAAC;EAED,MAAMH,cAAc,GAAIjB,IAAI,IAAK;IAC/B,MAAMqB,WAAW,GAAGrB,IAAI,CAACsB,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,YAAY,CAAC;IAC1D,MAAMC,iBAAiB,GAAG,IAAIC,GAAG,CAACJ,WAAW,CAAC;IAE9C,MAAMK,eAAe,GAAG,CACtB;MACEC,IAAI,EAAE,cAAc;MACpBC,KAAK,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC;MACvBC,IAAI,EAAE;IACR,CAAC,EACD;MACEF,IAAI,EAAE,cAAc;MACpBC,KAAK,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC;MAC1BC,IAAI,EAAE;IACR,CAAC,EACD;MACEF,IAAI,EAAE,gBAAgB;MACtBC,KAAK,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC;MACnCC,IAAI,EAAE;IACR,CAAC,EACD;MACEF,IAAI,EAAE,gBAAgB;MACtBC,KAAK,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC;MAChCC,IAAI,EAAE;IACR,CAAC,EACD;MACEF,IAAI,EAAE,qBAAqB;MAC3BC,KAAK,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC;MAC3BC,IAAI,EAAE;IACR,CAAC,EACD;MACEF,IAAI,EAAE,wBAAwB;MAC9BC,KAAK,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC;MACvBC,IAAI,EAAE;IACR,CAAC,CACF;IAED,MAAMC,OAAO,GAAGJ,eAAe,CAACK,MAAM,CAACC,MAAM,IAC3CA,MAAM,CAACJ,KAAK,CAACK,KAAK,CAACC,IAAI,IAAIV,iBAAiB,CAACW,GAAG,CAACD,IAAI,CAAC,CACxD,CAAC;IAED/B,UAAU,CAAC2B,OAAO,CAAC;EACrB,CAAC;EAED,oBACEnC,OAAA;IAAKyC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9B3C,OAAA;MAAA2C,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzB/C,OAAA;MAAOgD,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAEzC;IAAiB;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClE/C,OAAA;MAAQmD,OAAO,EAAEtC,YAAa;MAAC4B,KAAK,EAAE;QAAEW,UAAU,EAAE;MAAO,CAAE;MAAAT,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE9F/C,OAAA;MAAKyC,KAAK,EAAE;QAAEY,SAAS,EAAE,MAAM;QAAEC,UAAU,EAAE,SAAS;QAAEZ,OAAO,EAAE;MAAO,CAAE;MAAAC,QAAA,EAAEtC;IAAI;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAEtFxC,OAAO,CAACgD,MAAM,GAAG,CAAC,iBACjBvD,OAAA;MAAKyC,KAAK,EAAE;QAAEY,SAAS,EAAE;MAAO,CAAE;MAAAV,QAAA,gBAChC3C,OAAA;QAAA2C,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1B/C,OAAA;QAAA2C,QAAA,EACGpC,OAAO,CAACiD,GAAG,CAAC,CAACnB,MAAM,EAAEoB,KAAK,kBACzBzD,OAAA;UAAA2C,QAAA,gBACE3C,OAAA;YAAA2C,QAAA,EAASN,MAAM,CAACL;UAAI;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,OAAG,EAACV,MAAM,CAACH,IAAI;QAAA,GADtCuB,KAAK;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC7C,EAAA,CA9FQD,GAAG;AAAAyD,EAAA,GAAHzD,GAAG;AAgGZ,eAAeA,GAAG;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}