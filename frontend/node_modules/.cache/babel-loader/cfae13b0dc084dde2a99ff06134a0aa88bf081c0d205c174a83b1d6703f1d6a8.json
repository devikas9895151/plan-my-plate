{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bivin\\\\Favorites\\\\Desktop\\\\sem7\\\\fsd\\\\ocr-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [text, setText] = useState('');\n  const [recipes, setRecipes] = useState([]);\n  const [isLoading, setIsLoading] = useState(false); // Added loading state for UX\n\n  const handleFileChange = e => {\n    setImage(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!image) {\n      alert('Please select an image first.');\n      return;\n    }\n    setIsLoading(true); // Set loading to true when upload starts\n    const formData = new FormData();\n    formData.append('image', image);\n    try {\n      // Step 1: Call your OCR backend to extract text\n      const ocrResponse = await axios.post('http://localhost:5000/extract', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      const extractedText = ocrResponse.data.text;\n      setText(extractedText);\n\n      // Step 2: Call your **backend's recipe suggestion endpoint**\n      await suggestRecipes(extractedText); // Ensure suggestRecipes is awaited\n    } catch (error) {\n      console.error('Error during OCR or recipe suggestion:', error);\n      alert('Failed to process image or suggest recipes. Please check console for details.');\n      setRecipes([]); // Clear recipes on error\n    } finally {\n      setIsLoading(false); // Set loading to false regardless of success or failure\n    }\n  };\n  const suggestRecipes = async extractedText => {\n    // Make this function async\n    // Normalize extracted ingredients for the API call\n    const rawIngredients = extractedText.toLowerCase().split(/[\\s,.\\n-]+/).filter(Boolean);\n    const uniqueIngredients = new Set(rawIngredients.map(word => {\n      // Simple singularization (matching backend's logic)\n      if (word.endsWith('s') && word.length > 1 && !['gas', 'bus', 'peas', 'beans'].includes(word)) {\n        return word.slice(0, -1);\n      }\n      return word;\n    }));\n    const ingredientsQuery = Array.from(uniqueIngredients).join(',');\n    if (!ingredientsQuery) {\n      setRecipes([]);\n      return; // No ingredients to search for\n    }\n    try {\n      // ✅ CRITICAL CHANGE: Call your backend's /api/recipes endpoint\n      const apiResponse = await axios.get(`http://localhost:5000/api/recipes?ingredients=${ingredientsQuery}`);\n\n      // The backend now returns an array of recipe objects with 'name' and 'ingredients'\n      setRecipes(apiResponse.data);\n      console.log(\"Recipes fetched from backend:\", apiResponse.data);\n    } catch (error) {\n      console.error(\"Error fetching recipes from backend:\", error);\n      alert('Could not fetch recipes from the server. Ensure your backend is running and the dataset is loaded.');\n      setRecipes([]); // Clear recipes on error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem',\n      fontFamily: 'Arial, sans-serif',\n      maxWidth: '800px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        color: '#333'\n      },\n      children: \"OCR Image Upload & Recipe Suggester \\uD83C\\uDF7D\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '1rem',\n        marginBottom: '2rem',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleFileChange,\n        style: {\n          padding: '0.5rem',\n          border: '1px solid #ccc',\n          borderRadius: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        disabled: isLoading || !image // Disable if loading or no image selected\n        ,\n        style: {\n          padding: '0.75rem 1.5rem',\n          backgroundColor: isLoading ? '#6c757d' : '#28a745',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: isLoading ? 'not-allowed' : 'pointer',\n          transition: 'background-color 0.3s ease'\n        },\n        children: isLoading ? 'Processing...' : 'Upload and Extract Text'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), text && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: '2rem',\n          color: '#555'\n        },\n        children: \"Extracted Ingredients:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          background: '#f8f9fa',\n          padding: '1.5rem',\n          borderRadius: '8px',\n          border: '1px solid #e9ecef',\n          whiteSpace: 'pre-wrap',\n          wordBreak: 'break-word',\n          fontSize: '1.1em',\n          color: '#343a40'\n        },\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '1rem',\n        textAlign: 'center',\n        color: '#007bff'\n      },\n      children: \"Loading recipes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }, this), recipes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: '#555'\n        },\n        children: \"Suggested Recipes \\uD83D\\uDCA1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyleType: 'none',\n          padding: 0\n        },\n        children: recipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '0.8rem',\n            background: '#e6ffe6',\n            padding: '1rem',\n            borderRadius: '8px',\n            borderLeft: '5px solid #4CAF50',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.05)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            style: {\n              color: '#218838'\n            },\n            children: recipe.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this), \" - \", recipe.meal || 'Unknown Meal', recipe.ingredients && recipe.ingredients.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '0.9em',\n              color: '#666',\n              marginLeft: '0.5rem',\n              display: 'block',\n              marginTop: '0.2rem'\n            },\n            children: [\"(Main Ingredients: \", recipe.ingredients.join(', '), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), text && recipes.length === 0 && !isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '2rem',\n        textAlign: 'center',\n        color: '#888'\n      },\n      children: \"No recipes found with the given ingredients. Try adding more or adjust your search.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RhUAt8XrLgQNSuCbF+vHdI133o4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","image","setImage","text","setText","recipes","setRecipes","isLoading","setIsLoading","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","ocrResponse","post","headers","extractedText","data","suggestRecipes","error","console","rawIngredients","toLowerCase","split","filter","Boolean","uniqueIngredients","Set","map","word","endsWith","length","includes","slice","ingredientsQuery","Array","from","join","apiResponse","get","log","style","padding","fontFamily","maxWidth","margin","children","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","gap","marginBottom","justifyContent","type","accept","onChange","border","borderRadius","onClick","disabled","backgroundColor","cursor","transition","marginTop","background","whiteSpace","wordBreak","fontSize","listStyleType","recipe","index","borderLeft","boxShadow","name","meal","ingredients","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/bivin/Favorites/Desktop/sem7/fsd/ocr-app/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [image, setImage] = useState(null);\r\n  const [text, setText] = useState('');\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false); // Added loading state for UX\r\n\r\n  const handleFileChange = (e) => {\r\n    setImage(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!image) {\r\n      alert('Please select an image first.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true); // Set loading to true when upload starts\r\n    const formData = new FormData();\r\n    formData.append('image', image);\r\n\r\n    try {\r\n      // Step 1: Call your OCR backend to extract text\r\n      const ocrResponse = await axios.post('http://localhost:5000/extract', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      });\r\n\r\n      const extractedText = ocrResponse.data.text;\r\n      setText(extractedText);\r\n\r\n      // Step 2: Call your **backend's recipe suggestion endpoint**\r\n      await suggestRecipes(extractedText); // Ensure suggestRecipes is awaited\r\n\r\n    } catch (error) {\r\n      console.error('Error during OCR or recipe suggestion:', error);\r\n      alert('Failed to process image or suggest recipes. Please check console for details.');\r\n      setRecipes([]); // Clear recipes on error\r\n    } finally {\r\n      setIsLoading(false); // Set loading to false regardless of success or failure\r\n    }\r\n  };\r\n\r\n  const suggestRecipes = async (extractedText) => { // Make this function async\r\n    // Normalize extracted ingredients for the API call\r\n    const rawIngredients = extractedText.toLowerCase().split(/[\\s,.\\n-]+/).filter(Boolean);\r\n    const uniqueIngredients = new Set(rawIngredients.map(word => {\r\n        // Simple singularization (matching backend's logic)\r\n        if (word.endsWith('s') && word.length > 1 && !['gas', 'bus', 'peas', 'beans'].includes(word)) {\r\n            return word.slice(0, -1);\r\n        }\r\n        return word;\r\n    }));\r\n\r\n    const ingredientsQuery = Array.from(uniqueIngredients).join(',');\r\n\r\n    if (!ingredientsQuery) {\r\n      setRecipes([]);\r\n      return; // No ingredients to search for\r\n    }\r\n\r\n    try {\r\n      // ✅ CRITICAL CHANGE: Call your backend's /api/recipes endpoint\r\n      const apiResponse = await axios.get(`http://localhost:5000/api/recipes?ingredients=${ingredientsQuery}`);\r\n      \r\n      // The backend now returns an array of recipe objects with 'name' and 'ingredients'\r\n      setRecipes(apiResponse.data); \r\n      console.log(\"Recipes fetched from backend:\", apiResponse.data);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching recipes from backend:\", error);\r\n      alert('Could not fetch recipes from the server. Ensure your backend is running and the dataset is loaded.');\r\n      setRecipes([]); // Clear recipes on error\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '2rem', fontFamily: 'Arial, sans-serif', maxWidth: '800px', margin: '0 auto' }}>\r\n      <h2 style={{ textAlign: 'center', color: '#333' }}>OCR Image Upload & Recipe Suggester 🍽️</h2>\r\n      \r\n      <div style={{ display: 'flex', alignItems: 'center', gap: '1rem', marginBottom: '2rem', justifyContent: 'center' }}>\r\n        <input \r\n          type=\"file\" \r\n          accept=\"image/*\" \r\n          onChange={handleFileChange} \r\n          style={{ padding: '0.5rem', border: '1px solid #ccc', borderRadius: '5px' }}\r\n        />\r\n        <button \r\n          onClick={handleUpload} \r\n          disabled={isLoading || !image} // Disable if loading or no image selected\r\n          style={{ \r\n            padding: '0.75rem 1.5rem', \r\n            backgroundColor: isLoading ? '#6c757d' : '#28a745', \r\n            color: 'white', \r\n            border: 'none', \r\n            borderRadius: '5px', \r\n            cursor: isLoading ? 'not-allowed' : 'pointer',\r\n            transition: 'background-color 0.3s ease'\r\n          }}\r\n        >\r\n          {isLoading ? 'Processing...' : 'Upload and Extract Text'}\r\n        </button>\r\n      </div>\r\n\r\n      {text && (\r\n        <>\r\n          <h3 style={{ marginTop: '2rem', color: '#555' }}>Extracted Ingredients:</h3>\r\n          <pre style={{ \r\n            background: '#f8f9fa', \r\n            padding: '1.5rem', \r\n            borderRadius: '8px', \r\n            border: '1px solid #e9ecef',\r\n            whiteSpace: 'pre-wrap', \r\n            wordBreak: 'break-word',\r\n            fontSize: '1.1em',\r\n            color: '#343a40'\r\n          }}>\r\n            {text}\r\n          </pre>\r\n        </>\r\n      )}\r\n\r\n      {isLoading && <p style={{ marginTop: '1rem', textAlign: 'center', color: '#007bff' }}>Loading recipes...</p>}\r\n\r\n      {recipes.length > 0 && (\r\n        <div style={{ marginTop: '2rem' }}>\r\n          <h3 style={{ color: '#555' }}>Suggested Recipes 💡</h3>\r\n          <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n            {recipes.map((recipe, index) => (\r\n              <li \r\n                key={index} \r\n                style={{ \r\n                  marginBottom: '0.8rem', \r\n                  background: '#e6ffe6', \r\n                  padding: '1rem', \r\n                  borderRadius: '8px', \r\n                  borderLeft: '5px solid #4CAF50',\r\n                  boxShadow: '0 2px 4px rgba(0,0,0,0.05)'\r\n                }}\r\n              >\r\n                <strong style={{ color: '#218838' }}>{recipe.name}</strong> - {recipe.meal || 'Unknown Meal'}\r\n                {recipe.ingredients && recipe.ingredients.length > 0 && (\r\n                  <span style={{ fontSize: '0.9em', color: '#666', marginLeft: '0.5rem', display: 'block', marginTop: '0.2rem' }}>\r\n                    (Main Ingredients: {recipe.ingredients.join(', ')})\r\n                  </span>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {text && recipes.length === 0 && !isLoading && (\r\n        <p style={{ marginTop: '2rem', textAlign: 'center', color: '#888' }}>No recipes found with the given ingredients. Try adding more or adjust your search.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}